{"ast":null,"code":"import Color from 'color';\nimport { colorLevel } from \"../mixins/helpers\";\nimport { selectorMediaUp } from \"../mixins/selectors\";\nexport default function getClasses(constants, classes) {\n  var WHITE = constants.WHITE,\n      BLACK = constants.BLACK,\n      BODY_COLOR = constants.BODY_COLOR,\n      THEME_COLORS = constants.THEME_COLORS,\n      SCREENS_INFIXES = constants.SCREENS_INFIXES,\n      TEXT_MUTED = constants.TEXT_MUTED,\n      FONT_FAMILY_BASE = constants.FONT_FAMILY_BASE,\n      FONT_FAMILY_BASE_LIGHT = constants.FONT_FAMILY_BASE_LIGHT,\n      FONT_FAMILY_BASE_BOLD = constants.FONT_FAMILY_BASE_BOLD,\n      FONT_FAMILY_MONOSPACE = constants.FONT_FAMILY_MONOSPACE,\n      FONT_WEIGHT_NORMAL = constants.FONT_WEIGHT_NORMAL,\n      FONT_WEIGHT_LIGHT = constants.FONT_WEIGHT_LIGHT,\n      FONT_WEIGHT_BOLD = constants.FONT_WEIGHT_BOLD,\n      FONT_SIZE_BASE = constants.FONT_SIZE_BASE,\n      FONT_SIZE_SM = constants.FONT_SIZE_SM,\n      FONT_SIZE_LG = constants.FONT_SIZE_LG;\n  var _classes = {\n    fontWeightLight: {\n      fontWeight: FONT_WEIGHT_LIGHT,\n      fontFamily: FONT_FAMILY_BASE_LIGHT\n    },\n    fontWeightNormal: {\n      fontWeight: FONT_WEIGHT_NORMAL\n    },\n    fontWeightBold: {\n      fontWeight: FONT_WEIGHT_BOLD,\n      fontFamily: FONT_FAMILY_BASE_BOLD\n    },\n    fontItalic: {\n      fontStyle: 'italic'\n    },\n    textBody: {\n      color: BODY_COLOR\n    },\n    textWhite: {\n      color: WHITE\n    },\n    textMuted: {\n      color: TEXT_MUTED\n    },\n    textBlack50: {\n      color: Color(BLACK).fade(0.5).rgb().string()\n    },\n    textWhite50: {\n      color: Color(WHITE).fade(0.5).rgb().string()\n    },\n    textCenter: {\n      textAlign: 'center'\n    },\n    textJustify: {\n      textAlign: 'justify'\n    },\n    textSmall: {\n      fontSize: FONT_SIZE_SM\n    },\n    textLarge: {\n      fontSize: FONT_SIZE_LG\n    },\n    textSpaced: {\n      letterSpacing: FONT_SIZE_BASE * 0.075\n    },\n    textMonospace: {\n      fontFamily: FONT_FAMILY_MONOSPACE\n    }\n  };\n  var ALIGN_TYPES = {\n    'Auto': 'auto',\n    'Left': 'left',\n    'Right': 'right',\n    'Center': 'center',\n    'Justify': 'justify'\n  };\n  SCREENS_INFIXES.forEach(function (itemScreen) {\n    Object.keys(ALIGN_TYPES).forEach(function (item) {\n      _classes['float' + itemScreen + item] = selectorMediaUp(itemScreen, SCREENS_INFIXES, {\n        textAlign: ALIGN_TYPES[item]\n      });\n    });\n  });\n  Object.keys(THEME_COLORS).forEach(function (item) {\n    var classColor = item.charAt(0).toUpperCase() + item.slice(1).toLowerCase();\n    _classes['text' + classColor] = {\n      color: THEME_COLORS[item]\n    };\n    _classes['text' + classColor + 'Light'] = {\n      color: colorLevel(constants, THEME_COLORS[item], -9)\n    };\n    _classes['text' + classColor + 'Dark'] = {\n      color: colorLevel(constants, THEME_COLORS[item], 9)\n    };\n    _classes['text' + classColor + 'Lightest'] = {\n      color: colorLevel(constants, THEME_COLORS[item], -11)\n    };\n    _classes['text' + classColor + 'Darkest'] = {\n      color: colorLevel(constants, THEME_COLORS[item], -11)\n    };\n  });\n  return _classes;\n}\n;","map":{"version":3,"sources":["/Users/ashish/Downloads/covid kunal/node_modules/react-native-bootstrap-styles/src/utilities/text.js"],"names":["Color","colorLevel","selectorMediaUp","getClasses","constants","classes","WHITE","BLACK","BODY_COLOR","THEME_COLORS","SCREENS_INFIXES","TEXT_MUTED","FONT_FAMILY_BASE","FONT_FAMILY_BASE_LIGHT","FONT_FAMILY_BASE_BOLD","FONT_FAMILY_MONOSPACE","FONT_WEIGHT_NORMAL","FONT_WEIGHT_LIGHT","FONT_WEIGHT_BOLD","FONT_SIZE_BASE","FONT_SIZE_SM","FONT_SIZE_LG","_classes","fontWeightLight","fontWeight","fontFamily","fontWeightNormal","fontWeightBold","fontItalic","fontStyle","textBody","color","textWhite","textMuted","textBlack50","fade","rgb","string","textWhite50","textCenter","textAlign","textJustify","textSmall","fontSize","textLarge","textSpaced","letterSpacing","textMonospace","ALIGN_TYPES","forEach","itemScreen","Object","keys","item","classColor","charAt","toUpperCase","slice","toLowerCase"],"mappings":"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","sourcesContent":["import Color from 'color';\nimport { colorLevel } from '../mixins/helpers';\nimport { selectorMediaUp } from '../mixins/selectors';\n\nexport default function getClasses(constants, classes) {\n  const {\n    WHITE,\n    BLACK,\n    BODY_COLOR,\n    THEME_COLORS,\n    SCREENS_INFIXES,\n    TEXT_MUTED,\n    FONT_FAMILY_BASE,\n    FONT_FAMILY_BASE_LIGHT, // experimental\n    FONT_FAMILY_BASE_BOLD, // experimental\n    FONT_FAMILY_MONOSPACE,\n    FONT_WEIGHT_NORMAL,\n    FONT_WEIGHT_LIGHT,\n    FONT_WEIGHT_BOLD,\n    FONT_SIZE_BASE,\n    FONT_SIZE_SM,\n    FONT_SIZE_LG,\n  } = constants;\n\n  const _classes = {\n    fontWeightLight: {fontWeight: FONT_WEIGHT_LIGHT, fontFamily: FONT_FAMILY_BASE_LIGHT},\n    fontWeightNormal: {fontWeight: FONT_WEIGHT_NORMAL},\n    fontWeightBold: {fontWeight: FONT_WEIGHT_BOLD, fontFamily: FONT_FAMILY_BASE_BOLD},\n    fontItalic: {fontStyle: 'italic'},\n\n    textBody: {color: BODY_COLOR},\n    textWhite: {color: WHITE},\n    textMuted: {color: TEXT_MUTED},\n\n    textBlack50: {color: Color(BLACK).fade(0.5).rgb().string()},\n    textWhite50: {color: Color(WHITE).fade(0.5).rgb().string()},\n\n    //  textAuto: {textAlign: 'auto'},\n    // textLeft: {textAlign: 'left'},\n    // textRight: {textAlign: 'right'},\n    textCenter: {textAlign: 'center'},\n    textJustify: {textAlign: 'justify'},\n\n    // experimental\n    textSmall: {fontSize: FONT_SIZE_SM},\n    textLarge: {fontSize: FONT_SIZE_LG},\n    textSpaced: {letterSpacing: FONT_SIZE_BASE * 0.075},\n\n    textMonospace: {fontFamily: FONT_FAMILY_MONOSPACE},\n  };\n\n  const ALIGN_TYPES = {\n    'Auto': 'auto',\n    'Left': 'left',\n    'Right': 'right',\n    'Center': 'center',\n    'Justify': 'justify',\n  };\n\n  // text%value / ex: floatRight\n  // text%screen%value, / ex: floatLgRight\n  SCREENS_INFIXES.forEach((itemScreen) => {\n    Object.keys(ALIGN_TYPES).forEach(item => {\n      _classes['float' + itemScreen + item] = selectorMediaUp(itemScreen, SCREENS_INFIXES, {\n        textAlign: ALIGN_TYPES[item],\n      });\n    });\n  });\n\n  // text%color / ex: textPrimary\n  Object.keys(THEME_COLORS).forEach((item) => {\n    const classColor = item.charAt(0).toUpperCase() + item.slice(1).toLowerCase();\n    _classes['text' + classColor] = {color: THEME_COLORS[item]};\n\n    // custom\n    _classes['text' + classColor + 'Light'] = {color: colorLevel(constants, THEME_COLORS[item], -9)};\n    _classes['text' + classColor + 'Dark'] = {color: colorLevel(constants, THEME_COLORS[item], 9)};\n\n    // custom / experimental\n    _classes['text' + classColor + 'Lightest'] = {color: colorLevel(constants, THEME_COLORS[item], -11)};\n    _classes['text' + classColor + 'Darkest'] = {color: colorLevel(constants, THEME_COLORS[item], -11)};\n  });\n  // RESERVED / a#color%item: @include hover-focus { color: darken($color, 10%) !important; } // MIXIN_TEXT_EMPHASIS_VARIANT\n\n  // @mixin text-emphasis-variant($parent, $color) {\n  //   #{$parent} {\n  //     color: $color !important;\n  //   }\n  //   a#{$parent} {\n  //     @include hover-focus {\n  //       color: darken($color, 10%) !important;\n  //     }\n  //   }\n  // }\n\n  return _classes;\n};\n"]},"metadata":{},"sourceType":"module"}