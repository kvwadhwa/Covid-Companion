{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/ashish/Downloads/covid kunal/screens/LoginScreen.js\";\n\nimport { useNavigation } from '@react-navigation/core';\nimport React, { useEffect as UF, useState as US } from 'react';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { auth } from \"../firebase\";\n\nvar LgScreen = function LgScreen() {\n  var _US = US(''),\n      _US2 = _slicedToArray(_US, 2),\n      em = _US2[0],\n      setEml = _US2[1];\n\n  var _US3 = US(''),\n      _US4 = _slicedToArray(_US3, 2),\n      pwd = _US4[0],\n      setPwd = _US4[1];\n\n  var navigation = useNavigation();\n  UF(function () {\n    var unsubscribe = auth.onAuthStateChanged(function (user) {\n      if (user) {\n        navigation.replace(\"Home\");\n      }\n    });\n    return unsubscribe;\n  }, []);\n\n  var handleSignUp = function handleSignUp() {\n    auth.createUserWithEmailAndPassword(em, pwd).then(function (userCredentials) {\n      var user = userCredentials.user;\n      console.log('Registered with:', user.email);\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n\n  var handleLogin = function handleLogin() {\n    auth.signInWithEmailAndPassword(em, pwd).then(function (userCredentials) {\n      var user = userCredentials.user;\n      console.log('Logged in with:', user.email);\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    behavior: \"padding\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.inputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Email\",\n    value: em,\n    onChangeText: function onChangeText(text) {\n      return setEml(text);\n    },\n    style: styles.input,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Password\",\n    value: pwd,\n    onChangeText: function onChangeText(text) {\n      return setPwd(text);\n    },\n    style: styles.input,\n    secureTextEntry: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: handleLogin,\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"Login\")), React.createElement(TouchableOpacity, {\n    onPress: handleSignUp,\n    style: [styles.button, styles.buttonOutline],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonOutlineText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, \"Register\"))));\n};\n\nexport default LgScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  inputContainer: {\n    width: '80%'\n  },\n  input: {\n    backgroundColor: 'white',\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 5\n  },\n  buttonContainer: {\n    width: '60%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 40\n  },\n  button: {\n    backgroundColor: '#0782F9',\n    width: '100%',\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center'\n  },\n  buttonOutline: {\n    backgroundColor: 'white',\n    marginTop: 5,\n    borderColor: '#0782F9',\n    borderWidth: 2\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: '700',\n    fontSize: 16\n  },\n  buttonOutlineText: {\n    color: '#0782F9',\n    fontWeight: '700',\n    fontSize: 16\n  }\n});","map":{"version":3,"sources":["/Users/ashish/Downloads/covid kunal/screens/LoginScreen.js"],"names":["useNavigation","React","useEffect","UF","useState","US","auth","LgScreen","em","setEml","pwd","setPwd","navigation","unsubscribe","onAuthStateChanged","user","replace","handleSignUp","createUserWithEmailAndPassword","then","userCredentials","console","log","email","catch","error","alert","message","handleLogin","signInWithEmailAndPassword","styles","container","inputContainer","text","input","buttonContainer","button","buttonText","buttonOutline","buttonOutlineText","StyleSheet","create","flex","justifyContent","alignItems","width","backgroundColor","paddingHorizontal","paddingVertical","borderRadius","marginTop","padding","borderColor","borderWidth","color","fontWeight","fontSize"],"mappings":"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","sourcesContent":["import { useNavigation } from '@react-navigation/core'\nimport React, { useEffect as UF, useState as US} from 'react'\nimport { KeyboardAvoidingView, ScrollView, StyleSheet, Text, TextInput, TouchableOpacity, View } from 'react-native'\nimport { auth } from '../firebase'\n\nconst LgScreen = () => {\n  const [em, setEml] = US('')\n  const [pwd, setPwd] = US('')\n\n  const navigation = useNavigation()\n\n  UF(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      if (user) {\n        navigation.replace(\"Home\")\n      }\n    })\n\n    return unsubscribe\n  }, [])\n\n  const handleSignUp = () => {\n    auth\n      .createUserWithEmailAndPassword(em, pwd)\n      .then(userCredentials => {\n        const user = userCredentials.user;\n        console.log('Registered with:', user.email);\n      })\n      .catch(error => alert(error.message))\n  }\n\n  const handleLogin = () => {\n    auth\n      .signInWithEmailAndPassword(em, pwd)\n      .then(userCredentials => {\n        const user = userCredentials.user;\n        console.log('Logged in with:', user.email);\n      })\n      .catch(error => alert(error.message))\n  }\n\n  return (\n    // <ScrollView>\n    <View\n      style={styles.container}\n      behavior=\"padding\"\n    >\n      <View style={styles.inputContainer}>\n        <TextInput\n          placeholder=\"Email\"\n          value={em}\n          onChangeText={text => setEml(text)}\n          style={styles.input}\n        />\n        <TextInput\n          placeholder=\"Password\"\n          value={pwd}\n          onChangeText={text => setPwd(text)}\n          style={styles.input}\n          secureTextEntry\n        />\n      </View>\n\n      <View style={styles.buttonContainer}>\n        <TouchableOpacity\n          onPress={handleLogin}\n          style={styles.button}\n        >\n          <Text style={styles.buttonText}>Login</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={handleSignUp}\n          style={[styles.button, styles.buttonOutline]}\n        >\n          <Text style={styles.buttonOutlineText}>Register</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  )\n}\n\nexport default LgScreen\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  inputContainer: {\n    width: '80%'\n  },\n  input: {\n    backgroundColor: 'white',\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 5,\n  },\n  buttonContainer: {\n    width: '60%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 40,\n  },\n  button: {\n    backgroundColor: '#0782F9',\n    width: '100%',\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center',\n  },\n  buttonOutline: {\n    backgroundColor: 'white',\n    marginTop: 5,\n    borderColor: '#0782F9',\n    borderWidth: 2,\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: '700',\n    fontSize: 16,\n  },\n  buttonOutlineText: {\n    color: '#0782F9',\n    fontWeight: '700',\n    fontSize: 16,\n  },\n})\n"]},"metadata":{},"sourceType":"module"}