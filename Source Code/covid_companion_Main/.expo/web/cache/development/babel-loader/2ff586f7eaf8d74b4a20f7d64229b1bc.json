{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport { mixinBorderRadius } from \"./mixins/border-radius\";\nimport { mixinBoxShadow } from \"./mixins/box-shadow\";\nimport { selectorMediaUp } from \"./mixins/selectors\";\nexport default function getClasses(constants, classes) {\n  var SCREENS = constants.SCREENS,\n      INPUT_BG = constants.INPUT_BG,\n      INPUT_COLOR = constants.INPUT_COLOR,\n      INPUT_FONT_FAMILY = constants.INPUT_FONT_FAMILY,\n      INPUT_FONT_SIZE = constants.INPUT_FONT_SIZE,\n      INPUT_FONT_WEIGHT = constants.INPUT_FONT_WEIGHT,\n      INPUT_HEIGHT = constants.INPUT_HEIGHT,\n      INPUT_HEIGHT_SM = constants.INPUT_HEIGHT_SM,\n      INPUT_HEIGHT_LG = constants.INPUT_HEIGHT_LG,\n      INPUT_BORDER_COLOR = constants.INPUT_BORDER_COLOR,\n      INPUT_BORDER_WIDTH = constants.INPUT_BORDER_WIDTH,\n      INPUT_BORDER_RADIUS = constants.INPUT_BORDER_RADIUS,\n      INPUT_BORDER_RADIUS_SM = constants.INPUT_BORDER_RADIUS_SM,\n      INPUT_BORDER_RADIUS_LG = constants.INPUT_BORDER_RADIUS_LG,\n      INPUT_SHADOW_COLOR = constants.INPUT_SHADOW_COLOR,\n      INPUT_SHADOW_OPACITY = constants.INPUT_SHADOW_OPACITY,\n      INPUT_SHADOW_OFFSET = constants.INPUT_SHADOW_OFFSET,\n      INPUT_SHADOW_RADIUS = constants.INPUT_SHADOW_RADIUS,\n      LABEL_MARGIN_BOTTOM = constants.LABEL_MARGIN_BOTTOM,\n      INPUT_PADDING_Y = constants.INPUT_PADDING_Y,\n      INPUT_PADDING_X = constants.INPUT_PADDING_X,\n      INPUT_LINE_HEIGHT = constants.INPUT_LINE_HEIGHT,\n      INPUT_PADDING_Y_SM = constants.INPUT_PADDING_Y_SM,\n      INPUT_PADDING_X_SM = constants.INPUT_PADDING_X_SM,\n      INPUT_FONT_SIZE_SM = constants.INPUT_FONT_SIZE_SM,\n      INPUT_LINE_HEIGHT_SM = constants.INPUT_LINE_HEIGHT_SM,\n      INPUT_PADDING_Y_LG = constants.INPUT_PADDING_Y_LG,\n      INPUT_PADDING_X_LG = constants.INPUT_PADDING_X_LG,\n      INPUT_FONT_SIZE_LG = constants.INPUT_FONT_SIZE_LG,\n      INPUT_LINE_HEIGHT_LG = constants.INPUT_LINE_HEIGHT_LG,\n      INPUT_PLAINTEXT_COLOR = constants.INPUT_PLAINTEXT_COLOR,\n      INPUT_PLACEHOLDER_COLOR = constants.INPUT_PLACEHOLDER_COLOR,\n      INPUT_FOCUS_BG = constants.INPUT_FOCUS_BG,\n      INPUT_FOCUS_BORDER_COLOR = constants.INPUT_FOCUS_BORDER_COLOR,\n      INPUT_FOCUS_COLOR = constants.INPUT_FOCUS_COLOR,\n      INPUT_FOCUS_WIDTH = constants.INPUT_FOCUS_WIDTH,\n      INPUT_FOCUS_BOX_SHADOW_RADIUS = constants.INPUT_FOCUS_BOX_SHADOW_RADIUS,\n      INPUT_FOCUS_BOX_SHADOW_OFFSET = constants.INPUT_FOCUS_BOX_SHADOW_OFFSET,\n      INPUT_FOCUS_BOX_SHADOW_COLOR = constants.INPUT_FOCUS_BOX_SHADOW_COLOR,\n      INPUT_FOCUS_BOX_SHADOW_OPACITY = constants.INPUT_FOCUS_BOX_SHADOW_OPACITY,\n      FORM_TEXT_MARGIN_TOP = constants.FORM_TEXT_MARGIN_TOP,\n      FORM_CHECK_INPUT_GUTTER = constants.FORM_CHECK_INPUT_GUTTER,\n      FORM_CHECK_INPUT_MARGIN_Y = constants.FORM_CHECK_INPUT_MARGIN_Y,\n      FORM_CHECK_INPUT_MARGIN_X = constants.FORM_CHECK_INPUT_MARGIN_X,\n      FORM_CHECK_INLINE_MARGIN_X = constants.FORM_CHECK_INLINE_MARGIN_X,\n      FORM_CHECK_INLINE_INPUT_MARGIN_X = constants.FORM_CHECK_INLINE_INPUT_MARGIN_X,\n      FORM_GRID_GUTTER_WIDTH = constants.FORM_GRID_GUTTER_WIDTH,\n      FORM_GROUP_MARGIN_BOTTOM = constants.FORM_GROUP_MARGIN_BOTTOM,\n      FORM_FEEDBACK_MARGIN_TOP = constants.FORM_FEEDBACK_MARGIN_TOP,\n      FORM_FEEDBACK_FONT_SIZE = constants.FORM_FEEDBACK_FONT_SIZE,\n      FORM_FEEDBACK_VALID_COLOR = constants.FORM_FEEDBACK_VALID_COLOR,\n      FORM_FEEDBACK_INVALID_COLOR = constants.FORM_FEEDBACK_INVALID_COLOR;\n  var _classes = {\n    formControl: _extends({\n      width: '100%',\n      height: INPUT_HEIGHT,\n      paddingVertical: INPUT_PADDING_Y,\n      paddingHorizontal: INPUT_PADDING_X,\n      fontFamily: INPUT_FONT_FAMILY,\n      fontSize: INPUT_FONT_SIZE,\n      fontWeight: INPUT_FONT_WEIGHT,\n      color: INPUT_COLOR,\n      backgroundColor: INPUT_BG,\n      borderStyle: 'solid',\n      borderWidth: INPUT_BORDER_WIDTH,\n      borderColor: INPUT_BORDER_COLOR\n    }, mixinBorderRadius(constants, INPUT_BORDER_RADIUS), mixinBoxShadow(constants, INPUT_SHADOW_COLOR, INPUT_SHADOW_OFFSET, INPUT_SHADOW_OPACITY, INPUT_SHADOW_RADIUS)),\n    colFormLabel: {\n      paddingTop: INPUT_PADDING_Y + INPUT_BORDER_WIDTH,\n      paddingBottom: INPUT_PADDING_Y + INPUT_BORDER_WIDTH,\n      marginBottom: 0,\n      lineHeight: INPUT_LINE_HEIGHT,\n      fontSize: INPUT_FONT_SIZE\n    },\n    colFormLabelLg: {\n      paddingTop: INPUT_PADDING_Y_LG + INPUT_BORDER_WIDTH,\n      paddingBottom: INPUT_PADDING_Y_LG + INPUT_BORDER_WIDTH,\n      lineHeight: INPUT_LINE_HEIGHT_LG,\n      fontSize: INPUT_FONT_SIZE_LG\n    },\n    colFormLabelSm: {\n      paddingTop: INPUT_PADDING_Y_SM + INPUT_BORDER_WIDTH,\n      paddingBottom: INPUT_PADDING_Y_SM + INPUT_BORDER_WIDTH,\n      lineHeight: INPUT_LINE_HEIGHT_SM,\n      fontSize: INPUT_FONT_SIZE_SM\n    },\n    formControlPlaintext: {\n      paddingHorizontal: 0,\n      marginBottom: 0,\n      color: INPUT_PLAINTEXT_COLOR,\n      backgroundColor: 'transparent',\n      borderStyle: 'solid',\n      borderColor: 'transparent',\n      borderTopWidth: INPUT_BORDER_WIDTH,\n      borderBottomWidth: INPUT_BORDER_WIDTH,\n      borderLeftWidth: 0,\n      borderRightWidth: 0\n    },\n    formControlPlaintextSm: {\n      paddingRight: 0,\n      paddingLeft: 0\n    },\n    formControlPlaintextLg: {\n      paddingRight: 0,\n      paddingLeft: 0\n    },\n    formControlSm: _extends({\n      height: INPUT_HEIGHT_SM,\n      paddingVertical: INPUT_PADDING_Y_SM,\n      paddingHorizontal: INPUT_PADDING_X_SM,\n      fontSize: INPUT_FONT_SIZE_SM\n    }, mixinBorderRadius(constants, INPUT_BORDER_RADIUS_SM)),\n    formControlLg: _extends({\n      height: INPUT_HEIGHT_LG,\n      paddingVertical: INPUT_PADDING_Y_LG,\n      paddingHorizontal: INPUT_PADDING_X_LG,\n      fontSize: INPUT_FONT_SIZE_LG\n    }, mixinBorderRadius(constants, INPUT_BORDER_RADIUS_LG)),\n    formGroup: {\n      marginBottom: FORM_GROUP_MARGIN_BOTTOM\n    },\n    formText: _extends({}, classes.text, {\n      marginTop: FORM_TEXT_MARGIN_TOP\n    }),\n    formLabelText: _extends({}, classes.text, {\n      marginBottom: LABEL_MARGIN_BOTTOM\n    }),\n    formLabelSmText: {\n      fontSize: INPUT_FONT_SIZE_SM\n    },\n    formLabelLgText: {\n      fontSize: INPUT_FONT_SIZE_LG\n    },\n    formRow: {\n      marginRight: -FORM_GRID_GUTTER_WIDTH / 2,\n      marginLeft: -FORM_GRID_GUTTER_WIDTH / 2\n    },\n    formCol: {\n      paddingRight: FORM_GRID_GUTTER_WIDTH / 2,\n      paddingLeft: FORM_GRID_GUTTER_WIDTH / 2\n    },\n    formInline: {\n      display: 'flex',\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      alignItems: 'center'\n    },\n    formInlineFormCheck: {\n      width: '100%'\n    },\n    formInlineLabel: selectorMediaUp('Sm', SCREENS, {\n      alignItems: 'center',\n      justifyContent: 'center',\n      marginBottom: 0\n    }),\n    formInlineFormGroup: selectorMediaUp('Sm', SCREENS, {\n      flexGrow: 0,\n      flexShrink: 0,\n      flexBasis: 'auto',\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      alignItems: 'center',\n      marginBottom: 0\n    }),\n    formInlineFormControl: selectorMediaUp('Sm', SCREENS, {\n      width: 'auto'\n    }),\n    formInlineFormControlPlaintext: selectorMediaUp('Sm', SCREENS, {}),\n    formInlineInputGroup: selectorMediaUp('Sm', SCREENS, {\n      width: 'auto'\n    }),\n    formInlineCustomSelect: selectorMediaUp('Sm', SCREENS, {\n      width: 'auto'\n    }),\n    formInlineFormCheck: selectorMediaUp('Sm', SCREENS, {\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: 'auto',\n      paddingLeft: 0\n    }),\n    formInlineFormCheckInput: selectorMediaUp('Sm', SCREENS, {\n      position: 'relative',\n      flexShrink: 0,\n      marginTop: 0,\n      marginRight: FORM_CHECK_INPUT_MARGIN_X,\n      marginLeft: 0\n    }),\n    formInlineCustomControl: selectorMediaUp('Sm', SCREENS, {\n      alignItems: 'center',\n      justifyContent: 'center'\n    }),\n    formInlineCustomControlLabel: selectorMediaUp('Sm', SCREENS, {\n      marginBottom: 0\n    })\n  };\n  [{\n    state: 'valid',\n    color: FORM_FEEDBACK_VALID_COLOR\n  }, {\n    state: 'invalid',\n    color: FORM_FEEDBACK_INVALID_COLOR\n  }].forEach(function (item) {\n    _classes[item.state + 'Feedback'] = {\n      width: '100%',\n      marginTop: FORM_FEEDBACK_MARGIN_TOP,\n      color: item.color\n    };\n    _classes[item.state + 'FeedbackText'] = _classes[item.state + 'Feedback'];\n    _classes['is' + item.state.charAt(0).toUpperCase() + item.state.slice(1).toLowerCase()] = {\n      borderColor: item.color\n    };\n  });\n  return _classes;\n}\n;","map":{"version":3,"sources":["/Users/ashish/Downloads/covid kunal/node_modules/react-native-bootstrap-styles/src/forms.js"],"names":["mixinBorderRadius","mixinBoxShadow","selectorMediaUp","getClasses","constants","classes","SCREENS","INPUT_BG","INPUT_COLOR","INPUT_FONT_FAMILY","INPUT_FONT_SIZE","INPUT_FONT_WEIGHT","INPUT_HEIGHT","INPUT_HEIGHT_SM","INPUT_HEIGHT_LG","INPUT_BORDER_COLOR","INPUT_BORDER_WIDTH","INPUT_BORDER_RADIUS","INPUT_BORDER_RADIUS_SM","INPUT_BORDER_RADIUS_LG","INPUT_SHADOW_COLOR","INPUT_SHADOW_OPACITY","INPUT_SHADOW_OFFSET","INPUT_SHADOW_RADIUS","LABEL_MARGIN_BOTTOM","INPUT_PADDING_Y","INPUT_PADDING_X","INPUT_LINE_HEIGHT","INPUT_PADDING_Y_SM","INPUT_PADDING_X_SM","INPUT_FONT_SIZE_SM","INPUT_LINE_HEIGHT_SM","INPUT_PADDING_Y_LG","INPUT_PADDING_X_LG","INPUT_FONT_SIZE_LG","INPUT_LINE_HEIGHT_LG","INPUT_PLAINTEXT_COLOR","INPUT_PLACEHOLDER_COLOR","INPUT_FOCUS_BG","INPUT_FOCUS_BORDER_COLOR","INPUT_FOCUS_COLOR","INPUT_FOCUS_WIDTH","INPUT_FOCUS_BOX_SHADOW_RADIUS","INPUT_FOCUS_BOX_SHADOW_OFFSET","INPUT_FOCUS_BOX_SHADOW_COLOR","INPUT_FOCUS_BOX_SHADOW_OPACITY","FORM_TEXT_MARGIN_TOP","FORM_CHECK_INPUT_GUTTER","FORM_CHECK_INPUT_MARGIN_Y","FORM_CHECK_INPUT_MARGIN_X","FORM_CHECK_INLINE_MARGIN_X","FORM_CHECK_INLINE_INPUT_MARGIN_X","FORM_GRID_GUTTER_WIDTH","FORM_GROUP_MARGIN_BOTTOM","FORM_FEEDBACK_MARGIN_TOP","FORM_FEEDBACK_FONT_SIZE","FORM_FEEDBACK_VALID_COLOR","FORM_FEEDBACK_INVALID_COLOR","_classes","formControl","width","height","paddingVertical","paddingHorizontal","fontFamily","fontSize","fontWeight","color","backgroundColor","borderStyle","borderWidth","borderColor","colFormLabel","paddingTop","paddingBottom","marginBottom","lineHeight","colFormLabelLg","colFormLabelSm","formControlPlaintext","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","formControlPlaintextSm","paddingRight","paddingLeft","formControlPlaintextLg","formControlSm","formControlLg","formGroup","formText","text","marginTop","formLabelText","formLabelSmText","formLabelLgText","formRow","marginRight","marginLeft","formCol","formInline","display","flexDirection","flexWrap","alignItems","formInlineFormCheck","formInlineLabel","justifyContent","formInlineFormGroup","flexGrow","flexShrink","flexBasis","formInlineFormControl","formInlineFormControlPlaintext","formInlineInputGroup","formInlineCustomSelect","formInlineFormCheckInput","position","formInlineCustomControl","formInlineCustomControlLabel","state","forEach","item","charAt","toUpperCase","slice","toLowerCase"],"mappings":"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","sourcesContent":["import { mixinBorderRadius } from './mixins/border-radius';\nimport { mixinBoxShadow } from './mixins/box-shadow';\nimport { selectorMediaUp } from './mixins/selectors';\n\nexport default function getClasses(constants, classes) {\n  const {\n    SCREENS,\n    INPUT_BG,\n    INPUT_COLOR,\n    INPUT_FONT_FAMILY,\n    INPUT_FONT_SIZE,\n    INPUT_FONT_WEIGHT,\n    INPUT_HEIGHT,\n    INPUT_HEIGHT_SM,\n    INPUT_HEIGHT_LG,\n    INPUT_BORDER_COLOR,\n    INPUT_BORDER_WIDTH,\n    INPUT_BORDER_RADIUS,\n    INPUT_BORDER_RADIUS_SM,\n    INPUT_BORDER_RADIUS_LG,\n    INPUT_SHADOW_COLOR,\n    INPUT_SHADOW_OPACITY,\n    INPUT_SHADOW_OFFSET,\n    INPUT_SHADOW_RADIUS,\n    LABEL_MARGIN_BOTTOM,\n    INPUT_PADDING_Y,\n    INPUT_PADDING_X,\n    INPUT_LINE_HEIGHT,\n    INPUT_PADDING_Y_SM,\n    INPUT_PADDING_X_SM,\n    INPUT_FONT_SIZE_SM,\n    INPUT_LINE_HEIGHT_SM,\n    INPUT_PADDING_Y_LG,\n    INPUT_PADDING_X_LG,\n    INPUT_FONT_SIZE_LG,\n    INPUT_LINE_HEIGHT_LG,\n    INPUT_PLAINTEXT_COLOR,\n    INPUT_PLACEHOLDER_COLOR,\n    INPUT_FOCUS_BG,\n    INPUT_FOCUS_BORDER_COLOR,\n    INPUT_FOCUS_COLOR,\n    INPUT_FOCUS_WIDTH,\n    INPUT_FOCUS_BOX_SHADOW_RADIUS,\n    INPUT_FOCUS_BOX_SHADOW_OFFSET,\n    INPUT_FOCUS_BOX_SHADOW_COLOR,\n    INPUT_FOCUS_BOX_SHADOW_OPACITY,\n    FORM_TEXT_MARGIN_TOP,\n    FORM_CHECK_INPUT_GUTTER,\n    FORM_CHECK_INPUT_MARGIN_Y,\n    FORM_CHECK_INPUT_MARGIN_X,\n    FORM_CHECK_INLINE_MARGIN_X,\n    FORM_CHECK_INLINE_INPUT_MARGIN_X,\n    FORM_GRID_GUTTER_WIDTH,\n    FORM_GROUP_MARGIN_BOTTOM,\n    FORM_FEEDBACK_MARGIN_TOP,\n    FORM_FEEDBACK_FONT_SIZE,\n    FORM_FEEDBACK_VALID_COLOR,\n    FORM_FEEDBACK_INVALID_COLOR,\n  } = constants;\n\n  const _classes = {\n    formControl: Object.assign({\n      width: '100%',\n      height: INPUT_HEIGHT,\n      paddingVertical: INPUT_PADDING_Y,\n      paddingHorizontal: INPUT_PADDING_X,\n      fontFamily: INPUT_FONT_FAMILY,\n      fontSize: INPUT_FONT_SIZE,\n      fontWeight: INPUT_FONT_WEIGHT,\n      // excessive??, harmful!! / lineHeight: INPUT_LINE_HEIGHT,\n      color: INPUT_COLOR,\n      backgroundColor: INPUT_BG,\n      // background-clip: padding-box;\n      borderStyle: 'solid',\n      borderWidth: INPUT_BORDER_WIDTH,\n      borderColor: INPUT_BORDER_COLOR,\n    },\n      mixinBorderRadius(constants, INPUT_BORDER_RADIUS),\n      // todo: make the shadow \"inset\" somehow\n      mixinBoxShadow(constants, INPUT_SHADOW_COLOR, INPUT_SHADOW_OFFSET, INPUT_SHADOW_OPACITY, INPUT_SHADOW_RADIUS),\n    ),\n\n    // @include transition($input-transition);\n\n    // // Customize the `:focus` state to imitate native WebKit styles.\n    // @include form-control-focus();\n\n    // // Placeholder\n    // &::placeholder {\n    //   color: $input-placeholder-color;\n    //   // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526.\n    //   opacity: 1;\n    // }\n\n    // // Disabled and read-only inputs\n    // //\n    // // HTML5 says that controls under a fieldset > legend:first-child won't be\n    // // disabled if the fieldset is disabled. Due to implementation difficulty, we\n    // // don't honor that edge case; we style them as disabled anyway.\n    // &:disabled,\n    // &[readonly] {\n    //   background-color: $input-disabled-bg;\n    //   // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655.\n    //   opacity: 1;\n    // }\n\n    // select.form-control {\n    //   &:focus::-ms-value {\n    //     // Suppress the nested default white text on blue background highlight given to\n    //     // the selected option text when the (still closed) <select> receives focus\n    //     // in IE and (under certain conditions) Edge, as it looks bad and cannot be made to\n    //     // match the appearance of the native widget.\n    //     // See https://github.com/twbs/bootstrap/issues/19398.\n    //     color: $input-color;\n    //     background-color: $input-bg;\n    //   }\n    // }\n\n    // // Make file inputs better match text inputs by forcing them to new lines.\n    // .form-control-file,\n    // .form-control-range {\n    //   display: block;\n    //   width: 100%;\n    // }\n\n    // For use with horizontal and inline forms, when you need the label (or legend)\n    // text to align with the form controls.\n    colFormLabel: {\n      paddingTop: INPUT_PADDING_Y + INPUT_BORDER_WIDTH,\n      paddingBottom: INPUT_PADDING_Y + INPUT_BORDER_WIDTH,\n      marginBottom: 0, // userless?\n      lineHeight: INPUT_LINE_HEIGHT,\n      fontSize: INPUT_FONT_SIZE,\n    },\n\n    colFormLabelLg: {\n      paddingTop: INPUT_PADDING_Y_LG + INPUT_BORDER_WIDTH,\n      paddingBottom: INPUT_PADDING_Y_LG + INPUT_BORDER_WIDTH,\n      lineHeight: INPUT_LINE_HEIGHT_LG,\n      fontSize: INPUT_FONT_SIZE_LG,\n    },\n\n    colFormLabelSm: {\n      paddingTop: INPUT_PADDING_Y_SM + INPUT_BORDER_WIDTH,\n      paddingBottom: INPUT_PADDING_Y_SM + INPUT_BORDER_WIDTH,\n      lineHeight: INPUT_LINE_HEIGHT_SM,\n      fontSize: INPUT_FONT_SIZE_SM,\n    },\n\n    // with formControl\n    formControlPlaintext: {\n      paddingHorizontal: 0,\n      marginBottom: 0, // match inputs if this class comes on inputs with default margins\n      color: INPUT_PLAINTEXT_COLOR,\n      backgroundColor: 'transparent',\n      borderStyle: 'solid',\n      borderColor: 'transparent',\n      borderTopWidth: INPUT_BORDER_WIDTH,\n      borderBottomWidth: INPUT_BORDER_WIDTH,\n      borderLeftWidth: 0,\n      borderRightWidth: 0,\n    },\n\n    formControlPlaintextSm: {\n      paddingRight: 0,\n      paddingLeft: 0,\n    },\n\n    formControlPlaintextLg: {\n      paddingRight: 0,\n      paddingLeft: 0,\n    },\n\n    // with formControl\n    formControlSm: Object.assign({\n      height: INPUT_HEIGHT_SM,\n      paddingVertical: INPUT_PADDING_Y_SM,\n      paddingHorizontal: INPUT_PADDING_X_SM,\n      fontSize: INPUT_FONT_SIZE_SM,\n      // excessive??, harmful!! / lineHeight: INPUT_LINE_HEIGHT_SM,\n    },\n      mixinBorderRadius(constants, INPUT_BORDER_RADIUS_SM),\n    ),\n\n    // with formControl\n    formControlLg: Object.assign({\n      height: INPUT_HEIGHT_LG,\n      paddingVertical: INPUT_PADDING_Y_LG,\n      paddingHorizontal: INPUT_PADDING_X_LG,\n      fontSize: INPUT_FONT_SIZE_LG,\n      // excessive??, harmful!! / lineHeight: INPUT_LINE_HEIGHT_LG,\n    },\n      mixinBorderRadius(constants, INPUT_BORDER_RADIUS_LG),\n    ),\n\n    // // stylelint-disable-next-line no-duplicate-selectors\n    // select.form-control {\n    //   &[size],\n    //   &[multiple] {\n    //     height: auto;\n    //   }\n    // }\n\n    // textarea.form-control {\n    //   height: auto;\n    // }\n\n    formGroup: {\n      marginBottom: FORM_GROUP_MARGIN_BOTTOM,\n    },\n\n    formText: Object.assign({}, classes.text, {\n      // display: block;\n      marginTop: FORM_TEXT_MARGIN_TOP,\n    }),\n\n    formLabelText: Object.assign({}, classes.text, {\n      // non-applicable / display: inline-block;\n      marginBottom: LABEL_MARGIN_BOTTOM,\n    }),\n\n    // with formLabel\n    formLabelSmText: {\n      fontSize: INPUT_FONT_SIZE_SM,\n    },\n\n    // with formLabel\n    formLabelLgText: {\n      fontSize: INPUT_FONT_SIZE_LG,\n    },\n\n    formRow: {\n      marginRight: -FORM_GRID_GUTTER_WIDTH / 2,\n      marginLeft: -FORM_GRID_GUTTER_WIDTH / 2,\n\n      // > .col,\n      // > [class*=\"col-\"] {\n      //   padding-right: $form-grid-gutter-width / 2;\n      //   padding-left: $form-grid-gutter-width / 2;\n      // }\n    },\n\n    formCol: {\n      paddingRight: FORM_GRID_GUTTER_WIDTH / 2,\n      paddingLeft: FORM_GRID_GUTTER_WIDTH / 2,\n    },\n\n    // .form-check {\n    //   position: relative;\n    //   display: block;\n    //   padding-left: $form-check-input-gutter;\n    // }\n\n    // .form-check-input {\n    //   position: absolute;\n    //   margin-top: $form-check-input-margin-y;\n    //   margin-left: -$form-check-input-gutter;\n\n    //   // Use [disabled] and :disabled for workaround https://github.com/twbs/bootstrap/issues/28247\n    //   &[disabled] ~ .form-check-label,\n    //   &:disabled ~ .form-check-label {\n    //     color: $text-muted;\n    //   }\n    // }\n\n    // .form-check-label {\n    //   margin-bottom: 0; // Override default `<label>` bottom margin\n    // }\n\n    // .form-check-inline {\n    //   display: inline-flex;\n    //   align-items: center;\n    //   padding-left: 0; // Override base .form-check\n    //   margin-right: $form-check-inline-margin-x;\n\n    //   // Undo .form-check-input defaults and add some `margin-right`.\n    //   .form-check-input {\n    //     position: static;\n    //     margin-top: 0;\n    //     margin-right: $form-check-inline-input-margin-x;\n    //     margin-left: 0;\n    //   }\n    // }\n\n    formInline: {\n      display: 'flex',\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      alignItems: 'center',  // Prevent shorter elements from growing to same height as others (e.g., small buttons growing to normal sized button height)\n    },\n\n    // todo check it later / useless?\n    formInlineFormCheck: {\n      width: '100%',\n    },\n\n    formInlineLabel: selectorMediaUp('Sm', SCREENS, {\n      // display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      marginBottom: 0,\n    }),\n\n    formInlineFormGroup: selectorMediaUp('Sm', SCREENS, {\n      // display: 'flex',\n      flexGrow: 0,\n      flexShrink: 0,\n      flexBasis: 'auto',\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      alignItems: 'center',\n      marginBottom: 0,\n    }),\n\n    formInlineFormControl: selectorMediaUp('Sm', SCREENS, {\n      // display: inline-block;\n      width: 'auto', // Prevent labels from stacking above inputs in `.form-group`\n      // verticalAlign: middle;\n    }),\n\n    formInlineFormControlPlaintext: selectorMediaUp('Sm', SCREENS, {\n      // display: inline-block;\n    }),\n\n    formInlineInputGroup: selectorMediaUp('Sm', SCREENS, {\n      width: 'auto',\n    }),\n\n    formInlineCustomSelect: selectorMediaUp('Sm', SCREENS, {\n      width: 'auto',\n    }),\n\n    formInlineFormCheck: selectorMediaUp('Sm', SCREENS, {\n      // display: flex;\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: 'auto',\n      paddingLeft: 0,\n    }),\n\n    formInlineFormCheckInput: selectorMediaUp('Sm', SCREENS, {\n      position: 'relative',\n      flexShrink: 0,\n      marginTop: 0,\n      marginRight: FORM_CHECK_INPUT_MARGIN_X,\n      marginLeft: 0,\n    }),\n\n    formInlineCustomControl: selectorMediaUp('Sm', SCREENS, {\n      alignItems: 'center',\n      justifyContent: 'center',\n    }),\n\n    formInlineCustomControlLabel: selectorMediaUp('Sm', SCREENS, {\n      marginBottom: 0,\n    }),\n  };\n\n  [\n    {state: 'valid', color: FORM_FEEDBACK_VALID_COLOR}, // icon: FORM_FEEDBACK_ICON_VALID},\n    {state: 'invalid', color: FORM_FEEDBACK_INVALID_COLOR}, // icon: FORM_FEEDBACK_ICON_INVALID},\n  ].forEach((item) => {\n    _classes[item.state + 'Feedback'] = {\n        width: '100%',\n        marginTop: FORM_FEEDBACK_MARGIN_TOP,\n        color: item.color,\n    };\n\n    _classes[item.state + 'FeedbackText'] = _classes[item.state + 'Feedback'];\n\n    _classes['is' + item.state.charAt(0).toUpperCase() + item.state.slice(1).toLowerCase()] = {\n      borderColor: item.color,\n    };\n\n    //   .form-control {\n    //     @include form-validation-state-selector($state) {\n    //       border-color: $color;\n\n    //       @if $enable-validation-icons {\n    //         padding-right: $input-height-inner;\n    //         background-image: escape-svg($icon);\n    //         background-repeat: no-repeat;\n    //         background-position: right $input-height-inner-quarter center;\n    //         background-size: $input-height-inner-half $input-height-inner-half;\n    //       }\n\n    //       &:focus {\n    //         border-color: $color;\n    //         box-shadow: 0 0 0 $input-focus-width rgba($color, .25);\n    //       }\n    //     }\n    //   }\n\n    //   .#{$state}-tooltip {\n    //     position: absolute;\n    //     top: 100%;\n    //     z-index: 5;\n    //     display: none;\n    //     max-width: 100%; // Contain to parent when possible\n    //     padding: $form-feedback-tooltip-padding-y $form-feedback-tooltip-padding-x;\n    //     margin-top: .1rem;\n    //     @include font-size($form-feedback-tooltip-font-size);\n    //     line-height: $form-feedback-tooltip-line-height;\n    //     color: color-yiq($color);\n    //     background-color: rgba($color, $form-feedback-tooltip-opacity);\n    //     @include border-radius($form-feedback-tooltip-border-radius);\n    //   }\n\n    //   @include form-validation-state-selector($state) {\n    //     ~ .#{$state}-feedback,\n    //     ~ .#{$state}-tooltip {\n    //       display: block;\n    //     }\n    //   }\n\n    //   // stylelint-disable-next-line selector-no-qualifying-type\n    //   textarea.form-control {\n    //     @include form-validation-state-selector($state) {\n    //       @if $enable-validation-icons {\n    //         padding-right: $input-height-inner;\n    //         background-position: top $input-height-inner-quarter right $input-height-inner-quarter;\n    //       }\n    //     }\n    //   }\n\n    //   .custom-select {\n    //     @include form-validation-state-selector($state) {\n    //       border-color: $color;\n\n    //       @if $enable-validation-icons {\n    //         padding-right: $custom-select-feedback-icon-padding-right;\n    //         background: $custom-select-background, escape-svg($icon) $custom-select-bg no-repeat $custom-select-feedback-icon-position / $custom-select-feedback-icon-size;\n    //       }\n\n    //       &:focus {\n    //         border-color: $color;\n    //         box-shadow: 0 0 0 $input-focus-width rgba($color, .25);\n    //       }\n    //     }\n    //   }\n\n    //   .form-check-input {\n    //     @include form-validation-state-selector($state) {\n    //       ~ .form-check-label {\n    //         color: $color;\n    //       }\n\n    //       ~ .#{$state}-feedback,\n    //       ~ .#{$state}-tooltip {\n    //         display: block;\n    //       }\n    //     }\n    //   }\n\n    //   .custom-control-input {\n    //     @include form-validation-state-selector($state) {\n    //       ~ .custom-control-label {\n    //         color: $color;\n\n    //         &::before {\n    //           border-color: $color;\n    //         }\n    //       }\n\n    //       &:checked {\n    //         ~ .custom-control-label::before {\n    //           border-color: lighten($color, 10%);\n    //           @include gradient-bg(lighten($color, 10%));\n    //         }\n    //       }\n\n    //       &:focus {\n    //         ~ .custom-control-label::before {\n    //           box-shadow: 0 0 0 $input-focus-width rgba($color, .25);\n    //         }\n\n    //         &:not(:checked) ~ .custom-control-label::before {\n    //           border-color: $color;\n    //         }\n    //       }\n    //     }\n    //   }\n\n    //   // custom file\n    //   .custom-file-input {\n    //     @include form-validation-state-selector($state) {\n    //       ~ .custom-file-label {\n    //         border-color: $color;\n    //       }\n\n    //       &:focus {\n    //         ~ .custom-file-label {\n    //           border-color: $color;\n    //           box-shadow: 0 0 0 $input-focus-width rgba($color, .25);\n    //         }\n    //       }\n    //     }\n    //   }\n    // }\n  });\n\n  return _classes;\n};\n"]},"metadata":{},"sourceType":"module"}