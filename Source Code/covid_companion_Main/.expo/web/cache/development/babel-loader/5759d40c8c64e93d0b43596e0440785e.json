{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport Color from 'color';\nimport { mixinBorderRadius } from \"./mixins/border-radius\";\nimport { colorLevel } from \"./mixins/helpers\";\nexport default function getClasses(constants, classes) {\n  var THEME_COLORS = constants.THEME_COLORS,\n      ALERT_PADDING_Y = constants.ALERT_PADDING_Y,\n      ALERT_PADDING_X = constants.ALERT_PADDING_X,\n      ALERT_MARGIN_BOTTOM = constants.ALERT_MARGIN_BOTTOM,\n      ALERT_BORDER_RADIUS = constants.ALERT_BORDER_RADIUS,\n      ALERT_LINK_FONT_WEIGHT = constants.ALERT_LINK_FONT_WEIGHT,\n      ALERT_BORDER_WIDTH = constants.ALERT_BORDER_WIDTH,\n      ALERT_BG_LEVEL = constants.ALERT_BG_LEVEL,\n      ALERT_BORDER_LEVEL = constants.ALERT_BORDER_LEVEL,\n      ALERT_COLOR_LEVEL = constants.ALERT_COLOR_LEVEL,\n      CLOSE_FONT_SIZE = constants.CLOSE_FONT_SIZE,\n      CLOSE_FONT_WEIGHT = constants.CLOSE_FONT_WEIGHT,\n      CLOSE_COLOR = constants.CLOSE_COLOR;\n  var _classes = {\n    alert: _extends({\n      position: 'relative',\n      width: '100%',\n      paddingVertical: ALERT_PADDING_Y,\n      paddingHorizontal: ALERT_PADDING_X,\n      marginBottom: ALERT_MARGIN_BOTTOM,\n      borderWidth: ALERT_BORDER_WIDTH,\n      borderStyle: 'solid',\n      borderColor: 'transparent'\n    }, mixinBorderRadius(constants, ALERT_BORDER_RADIUS)),\n    alertText: _extends({}, classes.text, {}),\n    alertLink: {\n      fontWeight: ALERT_LINK_FONT_WEIGHT\n    },\n    alertDismissible: {\n      paddingRight: CLOSE_FONT_SIZE + ALERT_PADDING_X * 2\n    },\n    alertDismissibleClose: {\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      paddingVertical: ALERT_PADDING_Y,\n      paddingHorizontal: ALERT_PADDING_X\n    }\n  };\n  Object.keys(THEME_COLORS).forEach(function (item) {\n    var classColor = item.charAt(0).toUpperCase() + item.slice(1).toLowerCase();\n    var background = colorLevel(constants, THEME_COLORS[item], ALERT_BG_LEVEL);\n    var border = colorLevel(constants, THEME_COLORS[item], ALERT_BORDER_LEVEL);\n    var color = colorLevel(constants, THEME_COLORS[item], ALERT_COLOR_LEVEL);\n    classes['alert' + classColor] = {\n      borderColor: border,\n      backgroundColor: background\n    };\n    classes['alert' + classColor + 'Text'] = {\n      color: color\n    };\n    classes['alert' + classColor + 'Hr'] = {\n      borderTopColor: Color(border).darken(0.05).rgb().string()\n    };\n    classes['alert' + classColor + 'Link'] = {\n      color: Color(color).darken(0.10).rgb().string()\n    };\n  });\n  return _classes;\n}\n;","map":{"version":3,"sources":["/Users/ashish/Downloads/covid kunal/node_modules/react-native-bootstrap-styles/src/alerts.js"],"names":["Color","mixinBorderRadius","colorLevel","getClasses","constants","classes","THEME_COLORS","ALERT_PADDING_Y","ALERT_PADDING_X","ALERT_MARGIN_BOTTOM","ALERT_BORDER_RADIUS","ALERT_LINK_FONT_WEIGHT","ALERT_BORDER_WIDTH","ALERT_BG_LEVEL","ALERT_BORDER_LEVEL","ALERT_COLOR_LEVEL","CLOSE_FONT_SIZE","CLOSE_FONT_WEIGHT","CLOSE_COLOR","_classes","alert","position","width","paddingVertical","paddingHorizontal","marginBottom","borderWidth","borderStyle","borderColor","alertText","text","alertLink","fontWeight","alertDismissible","paddingRight","alertDismissibleClose","top","right","Object","keys","forEach","item","classColor","charAt","toUpperCase","slice","toLowerCase","background","border","color","backgroundColor","borderTopColor","darken","rgb","string"],"mappings":"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","sourcesContent":["import Color from 'color';\n\nimport { mixinBorderRadius } from './mixins/border-radius';\nimport { colorLevel } from './mixins/helpers';\n\nexport default function getClasses(constants, classes) {\n  const {\n    THEME_COLORS,\n    ALERT_PADDING_Y,\n    ALERT_PADDING_X,\n    ALERT_MARGIN_BOTTOM,\n    ALERT_BORDER_RADIUS,\n    ALERT_LINK_FONT_WEIGHT,\n    ALERT_BORDER_WIDTH,\n    ALERT_BG_LEVEL,\n    ALERT_BORDER_LEVEL,\n    ALERT_COLOR_LEVEL,\n\n    CLOSE_FONT_SIZE,\n    CLOSE_FONT_WEIGHT,\n    CLOSE_COLOR,\n  } = constants;\n\n  const _classes = {\n    alert: Object.assign({\n      position: 'relative',\n      width: '100%',\n      paddingVertical: ALERT_PADDING_Y,\n      paddingHorizontal: ALERT_PADDING_X,\n      marginBottom: ALERT_MARGIN_BOTTOM,\n      borderWidth: ALERT_BORDER_WIDTH,\n      borderStyle: 'solid',\n      borderColor: 'transparent',  // is it ok?\n    },\n      mixinBorderRadius(constants, ALERT_BORDER_RADIUS),\n    ),\n\n    alertText: Object.assign({}, classes.text, {\n      // pass\n    }),\n\n    alertLink: {\n      fontWeight: ALERT_LINK_FONT_WEIGHT,\n    },\n\n    // obsoleted\n    // .alert-heading {\n    //   // Specified to prevent conflicts of changing $headings-color\n    //   color: inherit;\n    // }\n\n    alertDismissible: {\n      paddingRight: CLOSE_FONT_SIZE + ALERT_PADDING_X * 2,\n    },\n\n    alertDismissibleClose: {\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      paddingVertical: ALERT_PADDING_Y,\n      paddingHorizontal: ALERT_PADDING_X,\n      // TODO: color: inherit;\n    },\n  };\n\n  // alert%color / ex: alertPrimary\n  Object.keys(THEME_COLORS).forEach((item) => {\n    const classColor = item.charAt(0).toUpperCase() + item.slice(1).toLowerCase();\n\n    const background = colorLevel(constants, THEME_COLORS[item], ALERT_BG_LEVEL); // theme-color-level($color, $alert-bg-level)\n    const border = colorLevel(constants, THEME_COLORS[item], ALERT_BORDER_LEVEL); // theme-color-level($color, $alert-border-level)\n    const color = colorLevel(constants, THEME_COLORS[item], ALERT_COLOR_LEVEL); // theme-color-level($color, $alert-color-level)\n\n    classes['alert' + classColor] = {\n      borderColor: border,\n      backgroundColor: background, // @include gradient-bg($background);\n    }\n\n    classes['alert' + classColor + 'Text'] = {\n      color: color,\n    }\n\n    classes['alert' + classColor + 'Hr'] = {\n      borderTopColor: Color(border).darken(0.05).rgb().string(),\n    }\n\n    classes['alert' + classColor + 'Link'] = {\n      color: Color(color).darken(0.10).rgb().string(),\n    }\n  });\n\n  return _classes;\n};\n"]},"metadata":{},"sourceType":"module"}