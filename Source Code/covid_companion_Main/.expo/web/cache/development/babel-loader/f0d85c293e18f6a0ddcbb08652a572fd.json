{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport { mixinBorderRadius, mixinBorderTopRadius, mixinBorderBottomRadius, mixinBorderLeftRadius, mixinBorderRightRadius } from \"./mixins/border-radius\";\nimport { selectorFirstChild, selectorNotFirstChild, selectorLastChild, selectorNotLastChild, selectorMediaUp, selectorMediaDown } from \"./mixins/selectors\";\nimport { mixinBoxShadow } from \"./mixins/box-shadow\";\nexport default function getClasses(constants, classes) {\n  var SCREENS = constants.SCREENS,\n      SCREENS_INFIXES = constants.SCREENS_INFIXES,\n      ENABLE_ROUNDED = constants.ENABLE_ROUNDED,\n      CARD_BG = constants.CARD_BG,\n      CARD_CAP_BG = constants.CARD_CAP_BG,\n      CARD_COLOR = constants.CARD_COLOR,\n      CARD_SPACER_X = constants.CARD_SPACER_X,\n      CARD_SPACER_Y = constants.CARD_SPACER_Y,\n      CARD_BORDER_WIDTH = constants.CARD_BORDER_WIDTH,\n      CARD_BORDER_COLOR = constants.CARD_BORDER_COLOR,\n      CARD_BORDER_RADIUS = constants.CARD_BORDER_RADIUS,\n      CARD_INNER_BORDER_RADIUS = constants.CARD_INNER_BORDER_RADIUS,\n      CARD_IMG_OVERLAY_PADDING = constants.CARD_IMG_OVERLAY_PADDING,\n      CARD_GROUP_MARGIN = constants.CARD_GROUP_MARGIN,\n      CARD_DECK_MARGIN = constants.CARD_DECK_MARGIN,\n      CARD_COLUMNS_COUNT = constants.CARD_COLUMNS_COUNT,\n      CARD_COLUMNS_GAP = constants.CARD_COLUMNS_GAP,\n      CARD_COLUMNS_MARGIN = constants.CARD_COLUMNS_MARGIN;\n  var _classes = {\n    card: _extends({\n      flex: 1,\n      flexDirection: 'column',\n      backgroundColor: CARD_BG,\n      borderWidth: CARD_BORDER_WIDTH,\n      borderColor: CARD_BORDER_COLOR\n    }, mixinBorderRadius(constants, CARD_BORDER_RADIUS)),\n    cardListGroup: {\n      borderTopWidth: CARD_BORDER_WIDTH,\n      borderTopColor: CARD_BORDER_COLOR,\n      borderBottomWidth: CARD_BORDER_WIDTH,\n      borderBottomColor: CARD_BORDER_COLOR\n    },\n    cardBody: {\n      flex: 1,\n      paddingHorizontal: CARD_SPACER_X,\n      paddingVertical: CARD_SPACER_X,\n      color: CARD_COLOR\n    },\n    cardTitle: {\n      marginBottom: CARD_SPACER_Y\n    },\n    cardSubtitle: {\n      marginTop: -(CARD_SPACER_Y / 2),\n      marginBottom: 0\n    },\n    cardTextLastChild: function cardTextLastChild(indexOrBool, length) {\n      return selectorLastChild(indexOrBool, length, {\n        marginBottom: 0\n      });\n    },\n    cardHeader: {\n      paddingVertical: CARD_SPACER_Y,\n      paddingHorizontal: CARD_SPACER_X,\n      backgroundColor: CARD_CAP_BG,\n      borderBottomWidth: CARD_BORDER_WIDTH,\n      borderBottomColor: CARD_BORDER_COLOR\n    },\n    cardHeaderFirstChild: function cardHeaderFirstChild(indexOrBool) {\n      return selectorFirstChild(indexOrBool, _extends({}, mixinBorderRadius(constants, CARD_INNER_BORDER_RADIUS, CARD_INNER_BORDER_RADIUS, 0, 0)));\n    },\n    cardHeaderListGroupItemFirstChild: function cardHeaderListGroupItemFirstChild(nListGroup, nListGroupItem) {\n      return selectorNotFirstChild(nListGroup, selectorFirstChild(nListGroupItem, {\n        borderTop: 0\n      }));\n    },\n    cardFooter: {\n      paddingVertical: CARD_SPACER_Y,\n      paddingHorizontal: CARD_SPACER_X,\n      backgroundColor: CARD_CAP_BG,\n      borderTopWidth: CARD_BORDER_WIDTH,\n      borderTopColor: CARD_BORDER_COLOR\n    },\n    cardFooterLastChild: function cardFooterLastChild(indexOrBool, lengthOrNone) {\n      return selectorLastChild(indexOrBool, lengthOrNone, _extends({}, mixinBorderRadius(constants, 0, 0, CARD_INNER_BORDER_RADIUS, CARD_INNER_BORDER_RADIUS)));\n    },\n    cardHeaderTabs: {\n      marginRight: -CARD_SPACER_X / 2,\n      marginBottom: -CARD_SPACER_Y,\n      marginLeft: -CARD_SPACER_X / 2,\n      borderBottomWidth: 0\n    },\n    cardHeaderPills: {\n      marginRight: -CARD_SPACER_X / 2,\n      marginLeft: -CARD_SPACER_X / 2\n    },\n    cardImgOverlay: {\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      padding: CARD_IMG_OVERLAY_PADDING\n    },\n    cardImg: _extends({\n      flexShrink: 0,\n      alignSelf: 'stretch'\n    }, mixinBorderRadius(constants, CARD_INNER_BORDER_RADIUS)),\n    cardImgTop: _extends({\n      flexShrink: 0,\n      alignSelf: 'stretch'\n    }, mixinBorderTopRadius(constants, CARD_INNER_BORDER_RADIUS)),\n    cardImgBottom: _extends({\n      flexShrink: 0,\n      alignSelf: 'stretch'\n    }, mixinBorderBottomRadius(constants, CARD_INNER_BORDER_RADIUS)),\n    cardDeck: selectorMediaUp('Sm', SCREENS, {\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      marginRight: -CARD_DECK_MARGIN,\n      marginLeft: -CARD_DECK_MARGIN\n    }),\n    cardDeckCard: _extends({\n      marginBottom: CARD_DECK_MARGIN\n    }, selectorMediaUp('Sm', SCREENS, {\n      marginRight: CARD_DECK_MARGIN,\n      marginBottom: 0,\n      marginLeft: CARD_DECK_MARGIN\n    })),\n    cardGroup: _extends({\n      marginBottom: CARD_GROUP_MARGIN\n    }, selectorMediaUp('Sm', SCREENS, {\n      flexDirection: 'row',\n      flexWrap: 'wrap'\n    })),\n    cardGroupCard: function cardGroupCard(index, length) {\n      return _extends({}, selectorMediaUp('Sm', SCREENS, _extends({\n        marginBottom: 0\n      }, ENABLE_ROUNDED ? _extends({}, selectorNotFirstChild(index, {\n        marginLeft: 0,\n        borderLeftWidth: 0\n      }), selectorNotFirstChild(index, mixinBorderLeftRadius(constants, 0)), selectorNotLastChild(index, length, mixinBorderRightRadius(constants, 0))) : {})), selectorMediaDown('Sm', SCREENS, _extends({}, ENABLE_ROUNDED ? _extends({}, selectorNotFirstChild(index, mixinBorderTopRadius(constants, 0)), selectorNotLastChild(index, length, mixinBorderBottomRadius(constants, 0))) : {})));\n    },\n    cardGroupCardCardImgTop: function cardGroupCardCardImgTop(index, length) {\n      return ENABLE_ROUNDED && _extends({}, selectorMediaUp('Sm', SCREENS, _extends({}, selectorNotLastChild(index, length, {\n        borderTopRightRadius: 0\n      }), selectorNotFirstChild(index, {\n        borderTopLeftRadius: 0\n      }))), selectorMediaDown('Sm', SCREENS, _extends({}, selectorNotFirstChild(index, mixinBorderTopRadius(constants, 0)))));\n    },\n    cardGroupCardCardHeader: function cardGroupCardCardHeader(index, length) {\n      return ENABLE_ROUNDED && _extends({}, selectorMediaUp('Sm', SCREENS, _extends({}, selectorNotLastChild(index, length, {\n        borderTopRightRadius: 0\n      }), selectorNotFirstChild(index, {\n        borderTopLeftRadius: 0\n      }))), selectorMediaDown('Sm', SCREENS, _extends({}, selectorNotFirstChild(index, mixinBorderTopRadius(constants, 0)))));\n    },\n    cardGroupCardCardImgBottom: function cardGroupCardCardImgBottom(index, length) {\n      return _extends({}, selectorMediaUp('Sm', SCREENS, _extends({}, selectorNotLastChild(index, length, {\n        borderBottomRightRadius: 0\n      }), selectorNotFirstChild(index, {\n        borderBottomLeftRadius: 0\n      }))), selectorMediaDown('Sm', SCREENS, _extends({}, selectorNotLastChild(index, length, mixinBorderBottomRadius(constants, 0)))));\n    },\n    cardGroupCardCardImgFooter: function cardGroupCardCardImgFooter(index, length) {\n      return _extends({}, selectorMediaUp('Sm', SCREENS, _extends({}, selectorNotLastChild(index, length, {\n        borderBottomRightRadius: 0\n      }), selectorNotFirstChild(index, {\n        borderBottomLeftRadius: 0\n      }))), selectorMediaDown('Sm', SCREENS, _extends({}, selectorNotLastChild(index, length, mixinBorderBottomRadius(constants, 0)))));\n    },\n    cardColumnsCard: _extends({\n      marginBottom: CARD_COLUMNS_MARGIN\n    }, selectorMediaUp('Sm', SCREENS, {\n      width: '100%'\n    })),\n    cardColumns: selectorMediaUp('Sm', SCREENS, {}),\n    cardAccordionCard: function cardAccordionCard(index, length) {\n      return _extends({\n        overflow: 'hidden'\n      }, selectorNotLastChild(index, length, _extends({\n        borderBottom: 0\n      }, mixinBorderBottomRadius(constants, 0))), selectorNotFirstChild(index, mixinBorderTopRadius(constants, 0)));\n    },\n    cardAccordionCardHeader: {\n      borderRadius: 0,\n      marginBottom: -CARD_BORDER_WIDTH\n    }\n  };\n  return _classes;\n}\n;","map":{"version":3,"sources":["/Users/ashish/Downloads/covid kunal/node_modules/react-native-bootstrap-styles/src/card.js"],"names":["mixinBorderRadius","mixinBorderTopRadius","mixinBorderBottomRadius","mixinBorderLeftRadius","mixinBorderRightRadius","selectorFirstChild","selectorNotFirstChild","selectorLastChild","selectorNotLastChild","selectorMediaUp","selectorMediaDown","mixinBoxShadow","getClasses","constants","classes","SCREENS","SCREENS_INFIXES","ENABLE_ROUNDED","CARD_BG","CARD_CAP_BG","CARD_COLOR","CARD_SPACER_X","CARD_SPACER_Y","CARD_BORDER_WIDTH","CARD_BORDER_COLOR","CARD_BORDER_RADIUS","CARD_INNER_BORDER_RADIUS","CARD_IMG_OVERLAY_PADDING","CARD_GROUP_MARGIN","CARD_DECK_MARGIN","CARD_COLUMNS_COUNT","CARD_COLUMNS_GAP","CARD_COLUMNS_MARGIN","_classes","card","flex","flexDirection","backgroundColor","borderWidth","borderColor","cardListGroup","borderTopWidth","borderTopColor","borderBottomWidth","borderBottomColor","cardBody","paddingHorizontal","paddingVertical","color","cardTitle","marginBottom","cardSubtitle","marginTop","cardTextLastChild","indexOrBool","length","cardHeader","cardHeaderFirstChild","cardHeaderListGroupItemFirstChild","nListGroup","nListGroupItem","borderTop","cardFooter","cardFooterLastChild","lengthOrNone","cardHeaderTabs","marginRight","marginLeft","cardHeaderPills","cardImgOverlay","position","top","right","bottom","left","padding","cardImg","flexShrink","alignSelf","cardImgTop","cardImgBottom","cardDeck","flexWrap","cardDeckCard","cardGroup","cardGroupCard","index","borderLeftWidth","cardGroupCardCardImgTop","borderTopRightRadius","borderTopLeftRadius","cardGroupCardCardHeader","cardGroupCardCardImgBottom","borderBottomRightRadius","borderBottomLeftRadius","cardGroupCardCardImgFooter","cardColumnsCard","width","cardColumns","cardAccordionCard","overflow","borderBottom","cardAccordionCardHeader","borderRadius"],"mappings":"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","sourcesContent":["import { mixinBorderRadius, mixinBorderTopRadius, mixinBorderBottomRadius, mixinBorderLeftRadius, mixinBorderRightRadius } from './mixins/border-radius';\nimport { selectorFirstChild, selectorNotFirstChild, selectorLastChild, selectorNotLastChild, selectorMediaUp, selectorMediaDown } from './mixins/selectors';\nimport { mixinBoxShadow } from './mixins/box-shadow';\n\nexport default function getClasses(constants, classes) {\n  const {\n    SCREENS,\n    SCREENS_INFIXES,\n    ENABLE_ROUNDED,\n\n    CARD_BG,\n    CARD_CAP_BG,\n    CARD_COLOR,\n    CARD_SPACER_X,\n    CARD_SPACER_Y,\n    CARD_BORDER_WIDTH,\n    CARD_BORDER_COLOR,\n    CARD_BORDER_RADIUS,\n    CARD_INNER_BORDER_RADIUS,\n    // OBSOLETED / CARD_SHADOW_COLOR,\n    // OBSOLETED / CARD_SHADOW_OFFSET,\n    // OBSOLETED / CARD_SHADOW_OPACITY,\n    // OBSOLETED / CARD_SHADOW_RADIUS,\n    CARD_IMG_OVERLAY_PADDING,\n    CARD_GROUP_MARGIN,\n    CARD_DECK_MARGIN,\n    CARD_COLUMNS_COUNT,\n    CARD_COLUMNS_GAP,\n    CARD_COLUMNS_MARGIN,\n  } = constants;\n\n  const _classes = {\n    card: Object.assign({\n      flex: 1, // experimental\n      flexDirection: 'column',\n      backgroundColor: CARD_BG,\n      borderWidth: CARD_BORDER_WIDTH,\n      borderColor: CARD_BORDER_COLOR,\n    },\n      mixinBorderRadius(constants, CARD_BORDER_RADIUS),\n      // OBSOLETED / mixinBorderTopRadius(constants, CARD_BORDER_RADIUS),\n      // OBSOLETED / mixinBorderBottomRadius(constants, CARD_BORDER_RADIUS),\n      // OBSOLETED / mixinBoxShadow(constants, CARD_SHADOW_COLOR, CARD_SHADOW_OFFSET, CARD_SHADOW_OPACITY, CARD_SHADOW_RADIUS),\n    ),\n\n    cardListGroup: {\n      borderTopWidth: CARD_BORDER_WIDTH,\n      borderTopColor: CARD_BORDER_COLOR,\n      borderBottomWidth: CARD_BORDER_WIDTH,\n      borderBottomColor: CARD_BORDER_COLOR,\n    },\n\n    // obsoleted\n    // cardListGroupFirstChild: (indexOrBool) => selectorFirstChild(indexOrBool, [{\n    //   borderTopWidth: 0,\n    // },\n    //   mixinBorderTopRadius(constants, CARD_INNER_BORDER_RADIUS),\n    // ]),\n\n    // obsoleted\n    // cardListGroupLastChild: (indexOrBool, length) => selectorFirstChild(indexOrBool, length, [{\n    //   borderBottomWidth: 0,\n    // },\n    //   mixinBorderBottomRadius(constants, CARD_INNER_BORDER_RADIUS),\n    // ]),\n\n    cardBody: {\n      flex: 1, // experimental / flex: 1 1 auto;\n      paddingHorizontal: CARD_SPACER_X,\n      paddingVertical: CARD_SPACER_X, // former: CARD_SPACER_Y,\n      color: CARD_COLOR,\n    },\n\n    cardTitle: {\n      marginBottom: CARD_SPACER_Y,\n    },\n\n    cardSubtitle: {\n      marginTop: -(CARD_SPACER_Y / 2),\n      marginBottom: 0,\n    },\n\n    // nb. seem useless: an issue is in the origin module\n    cardTextLastChild: (indexOrBool, length) => selectorLastChild(indexOrBool, length, {\n      marginBottom: 0,\n    }),\n\n    // .card-link {\n    //   @include hover {\n    //     text-decoration: none;\n    //   }\n\n    //   + .card-link {\n    //     margin-left: CARD_SPACER_X;\n    //   }\n    // }\n\n    cardHeader: {\n      paddingVertical: CARD_SPACER_Y,\n      paddingHorizontal: CARD_SPACER_X,\n      backgroundColor: CARD_CAP_BG,\n      borderBottomWidth: CARD_BORDER_WIDTH,\n      borderBottomColor: CARD_BORDER_COLOR,\n\n      // see cardHeaderFirstChild\n      // &:first-child {\n      //   @include border-radius($card-inner-border-radius $card-inner-border-radius 0 0);\n      // }\n\n      // see cardHeaderListGroupItemFirstChild\n      // + .list-group {\n      //   .list-group-item:first-child {\n      //     border-top: 0;\n      //   }\n      // }\n    },\n\n    cardHeaderFirstChild: indexOrBool => selectorFirstChild(indexOrBool, Object.assign({},\n      mixinBorderRadius(constants, CARD_INNER_BORDER_RADIUS, CARD_INNER_BORDER_RADIUS, 0, 0),\n    )),\n\n    // TODO: check later (bools?)\n    cardHeaderListGroupItemFirstChild: (nListGroup, nListGroupItem) => selectorNotFirstChild(nListGroup, (\n      selectorFirstChild(nListGroupItem, {\n        borderTop: 0,\n      })\n    )),\n\n    cardFooter: {\n      paddingVertical: CARD_SPACER_Y,\n      paddingHorizontal: CARD_SPACER_X,\n      backgroundColor: CARD_CAP_BG,\n      borderTopWidth: CARD_BORDER_WIDTH,\n      borderTopColor: CARD_BORDER_COLOR,\n\n      // see cardFooterLastChild\n      // &:last-child {\n      //   @include border-radius(0 0 $card-inner-border-radius $card-inner-border-radius);\n      // }\n    },\n\n    cardFooterLastChild: (indexOrBool, lengthOrNone) => selectorLastChild(indexOrBool, lengthOrNone, Object.assign({},\n      mixinBorderRadius(constants, 0, 0, CARD_INNER_BORDER_RADIUS, CARD_INNER_BORDER_RADIUS),\n    )),\n\n    cardHeaderTabs: {\n      marginRight: -CARD_SPACER_X / 2,\n      marginBottom: -CARD_SPACER_Y,\n      marginLeft: -CARD_SPACER_X / 2,\n      borderBottomWidth: 0,\n    },\n\n    cardHeaderPills: {\n      marginRight: -CARD_SPACER_X / 2,\n      marginLeft: -CARD_SPACER_X / 2,\n    },\n\n    cardImgOverlay: {\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      padding: CARD_IMG_OVERLAY_PADDING,\n    },\n\n    cardImg: Object.assign({\n      flexShrink: 0, // TEST / flex-shrink: 0\n      alignSelf: 'stretch', // TEST / width: 100%\n    }, mixinBorderRadius(constants, CARD_INNER_BORDER_RADIUS)),\n\n    cardImgTop: Object.assign({\n      flexShrink: 0, // TEST / flex-shrink: 0\n      alignSelf: 'stretch', // TEST / width: 100%\n    }, mixinBorderTopRadius(constants, CARD_INNER_BORDER_RADIUS)),\n\n    cardImgBottom: Object.assign({\n      flexShrink: 0, // TEST / flex-shrink: 0\n      alignSelf: 'stretch', // TEST / width: 100%\n    }, mixinBorderBottomRadius(constants, CARD_INNER_BORDER_RADIUS)),\n\n    cardDeck: selectorMediaUp('Sm', SCREENS, {\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      marginRight: -CARD_DECK_MARGIN,\n      marginLeft: -CARD_DECK_MARGIN,\n    }),\n\n    cardDeckCard: Object.assign({\n      marginBottom: CARD_DECK_MARGIN,\n    }, selectorMediaUp('Sm', SCREENS, {\n        // flex: 1 0 0%;\n        marginRight: CARD_DECK_MARGIN,\n        marginBottom: 0,\n        marginLeft: CARD_DECK_MARGIN,\n    })),\n\n    cardGroup: Object.assign({\n      marginBottom: CARD_GROUP_MARGIN,\n    }, selectorMediaUp('Sm', SCREENS, {\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n    })),\n\n    // todo: bug with \"hairline\" space between grouped cards. \"outside\" borders\n    cardGroupCard: (index, length) => Object.assign({},\n      selectorMediaUp('Sm', SCREENS, Object.assign({\n        // irrelevant? / flex: 1 0 0%;\n        marginBottom: 0,\n      }, ENABLE_ROUNDED ? Object.assign({},\n          selectorNotFirstChild(index, {marginLeft: 0, borderLeftWidth: 0}), // from .card + .card\n          selectorNotFirstChild(index, mixinBorderLeftRadius(constants, 0)),\n          selectorNotLastChild(index, length, mixinBorderRightRadius(constants, 0)),\n        ) : {},\n      )),\n      selectorMediaDown('Sm', SCREENS, Object.assign({\n        // pass\n      }, ENABLE_ROUNDED ? Object.assign({},\n          selectorNotFirstChild(index, mixinBorderTopRadius(constants, 0)),\n          selectorNotLastChild(index, length, mixinBorderBottomRadius(constants, 0)),\n        ) : {},\n      )),\n    ),\n\n    cardGroupCardCardImgTop: (index, length) => ENABLE_ROUNDED && Object.assign({},\n      selectorMediaUp('Sm', SCREENS, Object.assign({},\n        selectorNotLastChild(index, length, {borderTopRightRadius: 0}),\n        selectorNotFirstChild(index, {borderTopLeftRadius: 0}),\n      )),\n      selectorMediaDown('Sm', SCREENS, Object.assign({},\n        selectorNotFirstChild(index, mixinBorderTopRadius(constants, 0)),\n      )),\n    ),\n\n    cardGroupCardCardHeader: (index, length) => ENABLE_ROUNDED && Object.assign({},\n      selectorMediaUp('Sm', SCREENS, Object.assign({},\n        selectorNotLastChild(index, length, {borderTopRightRadius: 0}),\n        selectorNotFirstChild(index, {borderTopLeftRadius: 0}),\n      )),\n      selectorMediaDown('Sm', SCREENS, Object.assign({},\n        selectorNotFirstChild(index, mixinBorderTopRadius(constants, 0)),\n      )),\n    ),\n    cardGroupCardCardImgBottom: (index, length) => Object.assign({},\n      selectorMediaUp('Sm', SCREENS, Object.assign({},\n        selectorNotLastChild(index, length, {borderBottomRightRadius: 0}),\n        selectorNotFirstChild(index, {borderBottomLeftRadius: 0}),\n      )),\n      selectorMediaDown('Sm', SCREENS, Object.assign({},\n          selectorNotLastChild(index, length, mixinBorderBottomRadius(constants, 0)),\n      )),\n    ),\n\n    cardGroupCardCardImgFooter: (index, length) => Object.assign({},\n      selectorMediaUp('Sm', SCREENS, Object.assign({},\n        selectorNotLastChild(index, length, {borderBottomRightRadius: 0}),\n        selectorNotFirstChild(index, {borderBottomLeftRadius: 0}),\n      )),\n      selectorMediaDown('Sm', SCREENS, Object.assign({},\n          selectorNotLastChild(index, length, mixinBorderBottomRadius(constants, 0)),\n      )),\n    ),\n\n    // Columns\n\n    cardColumnsCard: Object.assign({\n      marginBottom: CARD_COLUMNS_MARGIN,\n    }, selectorMediaUp('Sm', SCREENS, {\n      // todo: set / display: inline-block; // Don't let them vertically span multiple columns\n      width: '100%',\n    })),\n\n    cardColumns: selectorMediaUp('Sm', SCREENS, {\n      // columnCount: $card-columns-count;\n      // column-gap: $card-columns-gap;\n      // orphans: 1;\n      // widows: 1;\n    }),\n\n    // custom naming\n    cardAccordionCard: (index, length) => Object.assign({\n      overflow: 'hidden',\n    },\n      selectorNotLastChild(index, length, Object.assign({\n        borderBottom: 0,\n      },\n        mixinBorderBottomRadius(constants, 0),\n      )),\n      selectorNotFirstChild(index,\n        mixinBorderTopRadius(constants, 0),\n      ),\n    ),\n\n    // custom naming\n    cardAccordionCardHeader: {\n      borderRadius: 0,\n      marginBottom: -CARD_BORDER_WIDTH,\n    },\n  };\n\n  return _classes;\n};\n"]},"metadata":{},"sourceType":"module"}