{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport { mixinListUnstyled } from \"./mixins/lists\";\nexport default function getClasses(constants, classes) {\n  var SPACER = constants.SPACER,\n      H1_FONT_SIZE = constants.H1_FONT_SIZE,\n      H2_FONT_SIZE = constants.H2_FONT_SIZE,\n      H3_FONT_SIZE = constants.H3_FONT_SIZE,\n      H4_FONT_SIZE = constants.H4_FONT_SIZE,\n      H5_FONT_SIZE = constants.H5_FONT_SIZE,\n      H6_FONT_SIZE = constants.H6_FONT_SIZE,\n      HEADINGS_MARGIN_BOTTOM = constants.HEADINGS_MARGIN_BOTTOM,\n      HEADINGS_FONT_FAMILY = constants.HEADINGS_FONT_FAMILY,\n      HEADINGS_FONT_WEIGHT = constants.HEADINGS_FONT_WEIGHT,\n      HEADINGS_COLOR = constants.HEADINGS_COLOR,\n      HR_MARGIN_Y = constants.HR_MARGIN_Y,\n      HR_BORDER_WIDTH = constants.HR_BORDER_WIDTH,\n      HR_BORDER_COLOR = constants.HR_BORDER_COLOR,\n      FONT_SIZE_SM = constants.FONT_SIZE_SM,\n      FONT_SIZE_LG = constants.FONT_SIZE_LG,\n      MARK_PADDING = constants.MARK_PADDING,\n      MARK_BG = constants.MARK_BG,\n      BLOCKQUOTE_FONT_SIZE = constants.BLOCKQUOTE_FONT_SIZE,\n      LEAD_FONT_SIZE = constants.LEAD_FONT_SIZE,\n      LEAD_FONT_WEIGHT = constants.LEAD_FONT_WEIGHT;\n  var _classes = {\n    hr: {\n      marginTop: HR_MARGIN_Y,\n      marginBottom: HR_MARGIN_Y,\n      borderWidth: 0,\n      borderTopWidth: HR_BORDER_WIDTH,\n      borderTopColor: HR_BORDER_COLOR,\n      borderStyle: 'solid'\n    },\n    textSmall: {\n      fontSize: FONT_SIZE_SM\n    },\n    textLarge: {\n      fontSize: FONT_SIZE_LG\n    },\n    mark: {\n      padding: MARK_PADDING,\n      backgroundColor: MARK_BG\n    },\n    listUnstyled: _extends({}, mixinListUnstyled),\n    initialism: {\n      textTransform: 'uppercase'\n    },\n    blockquote: {\n      marginBottom: SPACER,\n      fontSize: BLOCKQUOTE_FONT_SIZE\n    },\n    lead: {\n      fontSize: LEAD_FONT_SIZE,\n      fontWeight: LEAD_FONT_WEIGHT\n    }\n  };\n  var HEADINGS_SIZES = [H1_FONT_SIZE, H2_FONT_SIZE, H3_FONT_SIZE, H4_FONT_SIZE, H5_FONT_SIZE, H6_FONT_SIZE];\n  ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'].forEach(function (item, index) {\n    classes[item] = {\n      fontSize: HEADINGS_SIZES[index],\n      marginBottom: HEADINGS_MARGIN_BOTTOM,\n      fontFamily: HEADINGS_FONT_FAMILY,\n      fontWeight: HEADINGS_FONT_WEIGHT,\n      color: HEADINGS_COLOR,\n      lineHeight: HEADINGS_SIZES[index] * 1.2\n    };\n  });\n  _classes.small = _classes.textSmall;\n  _classes.large = _classes.textLarge;\n  return _classes;\n}\n;","map":{"version":3,"sources":["/Users/ashish/Downloads/covid kunal/node_modules/react-native-bootstrap-styles/src/type.js"],"names":["mixinListUnstyled","getClasses","constants","classes","SPACER","H1_FONT_SIZE","H2_FONT_SIZE","H3_FONT_SIZE","H4_FONT_SIZE","H5_FONT_SIZE","H6_FONT_SIZE","HEADINGS_MARGIN_BOTTOM","HEADINGS_FONT_FAMILY","HEADINGS_FONT_WEIGHT","HEADINGS_COLOR","HR_MARGIN_Y","HR_BORDER_WIDTH","HR_BORDER_COLOR","FONT_SIZE_SM","FONT_SIZE_LG","MARK_PADDING","MARK_BG","BLOCKQUOTE_FONT_SIZE","LEAD_FONT_SIZE","LEAD_FONT_WEIGHT","_classes","hr","marginTop","marginBottom","borderWidth","borderTopWidth","borderTopColor","borderStyle","textSmall","fontSize","textLarge","mark","padding","backgroundColor","listUnstyled","initialism","textTransform","blockquote","lead","fontWeight","HEADINGS_SIZES","forEach","item","index","fontFamily","color","lineHeight","small","large"],"mappings":";AAAA,SAASA,iBAAT;AAEA,eAAe,SAASC,UAAT,CAAoBC,SAApB,EAA+BC,OAA/B,EAAwC;AACrD,MACEC,MADF,GAwBIF,SAxBJ,CACEE,MADF;AAAA,MAEEC,YAFF,GAwBIH,SAxBJ,CAEEG,YAFF;AAAA,MAGEC,YAHF,GAwBIJ,SAxBJ,CAGEI,YAHF;AAAA,MAIEC,YAJF,GAwBIL,SAxBJ,CAIEK,YAJF;AAAA,MAKEC,YALF,GAwBIN,SAxBJ,CAKEM,YALF;AAAA,MAMEC,YANF,GAwBIP,SAxBJ,CAMEO,YANF;AAAA,MAOEC,YAPF,GAwBIR,SAxBJ,CAOEQ,YAPF;AAAA,MASEC,sBATF,GAwBIT,SAxBJ,CASES,sBATF;AAAA,MAUEC,oBAVF,GAwBIV,SAxBJ,CAUEU,oBAVF;AAAA,MAWEC,oBAXF,GAwBIX,SAxBJ,CAWEW,oBAXF;AAAA,MAYEC,cAZF,GAwBIZ,SAxBJ,CAYEY,cAZF;AAAA,MAcEC,WAdF,GAwBIb,SAxBJ,CAcEa,WAdF;AAAA,MAeEC,eAfF,GAwBId,SAxBJ,CAeEc,eAfF;AAAA,MAgBEC,eAhBF,GAwBIf,SAxBJ,CAgBEe,eAhBF;AAAA,MAiBEC,YAjBF,GAwBIhB,SAxBJ,CAiBEgB,YAjBF;AAAA,MAkBEC,YAlBF,GAwBIjB,SAxBJ,CAkBEiB,YAlBF;AAAA,MAmBEC,YAnBF,GAwBIlB,SAxBJ,CAmBEkB,YAnBF;AAAA,MAmBgBC,OAnBhB,GAwBInB,SAxBJ,CAmBgBmB,OAnBhB;AAAA,MAoBEC,oBApBF,GAwBIpB,SAxBJ,CAoBEoB,oBApBF;AAAA,MAsBEC,cAtBF,GAwBIrB,SAxBJ,CAsBEqB,cAtBF;AAAA,MAuBEC,gBAvBF,GAwBItB,SAxBJ,CAuBEsB,gBAvBF;AA0BA,MAAMC,QAAQ,GAAG;AAEfC,IAAAA,EAAE,EAAE;AACFC,MAAAA,SAAS,EAAEZ,WADT;AAEFa,MAAAA,YAAY,EAAEb,WAFZ;AAGFc,MAAAA,WAAW,EAAE,CAHX;AAIFC,MAAAA,cAAc,EAAEd,eAJd;AAKFe,MAAAA,cAAc,EAAEd,eALd;AAMFe,MAAAA,WAAW,EAAE;AANX,KAFW;AAWfC,IAAAA,SAAS,EAAE;AACTC,MAAAA,QAAQ,EAAEhB;AADD,KAXI;AAefiB,IAAAA,SAAS,EAAE;AACTD,MAAAA,QAAQ,EAAEf;AADD,KAfI;AAmBfiB,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAEjB,YADL;AAEJkB,MAAAA,eAAe,EAAEjB;AAFb,KAnBS;AAwBfkB,IAAAA,YAAY,EAAE,SAAc,EAAd,EACZvC,iBADY,CAxBC;AAwCfwC,IAAAA,UAAU,EAAE;AAEVC,MAAAA,aAAa,EAAE;AAFL,KAxCG;AA6CfC,IAAAA,UAAU,EAAE;AACVd,MAAAA,YAAY,EAAExB,MADJ;AAEV8B,MAAAA,QAAQ,EAAEZ;AAFA,KA7CG;AA4DfqB,IAAAA,IAAI,EAAE;AACJT,MAAAA,QAAQ,EAAEX,cADN;AAEJqB,MAAAA,UAAU,EAAEpB;AAFR;AA5DS,GAAjB;AAmEA,MAAMqB,cAAc,GAAG,CAACxC,YAAD,EAAeC,YAAf,EAA6BC,YAA7B,EAA2CC,YAA3C,EAAyDC,YAAzD,EAAuEC,YAAvE,CAAvB;AACA,GAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqCoC,OAArC,CAA6C,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC5D7C,IAAAA,OAAO,CAAC4C,IAAD,CAAP,GAAgB;AACdb,MAAAA,QAAQ,EAAEW,cAAc,CAACG,KAAD,CADV;AAEdpB,MAAAA,YAAY,EAAEjB,sBAFA;AAGdsC,MAAAA,UAAU,EAAErC,oBAHE;AAIdgC,MAAAA,UAAU,EAAE/B,oBAJE;AAKdqC,MAAAA,KAAK,EAAEpC,cALO;AAMdqC,MAAAA,UAAU,EAAEN,cAAc,CAACG,KAAD,CAAd,GAAwB;AANtB,KAAhB;AASD,GAVD;AAmCAvB,EAAAA,QAAQ,CAAC2B,KAAT,GAAiB3B,QAAQ,CAACQ,SAA1B;AACAR,EAAAA,QAAQ,CAAC4B,KAAT,GAAiB5B,QAAQ,CAACU,SAA1B;AAEA,SAAOV,QAAP;AACD;AAAA","sourcesContent":["import { mixinListUnstyled } from './mixins/lists';\n\nexport default function getClasses(constants, classes) {\n  const {\n    SPACER,\n    H1_FONT_SIZE,\n    H2_FONT_SIZE,\n    H3_FONT_SIZE,\n    H4_FONT_SIZE,\n    H5_FONT_SIZE,\n    H6_FONT_SIZE,\n\n    HEADINGS_MARGIN_BOTTOM,\n    HEADINGS_FONT_FAMILY,\n    HEADINGS_FONT_WEIGHT,\n    HEADINGS_COLOR,\n\n    HR_MARGIN_Y,\n    HR_BORDER_WIDTH,\n    HR_BORDER_COLOR,\n    FONT_SIZE_SM,\n    FONT_SIZE_LG,\n    MARK_PADDING, MARK_BG,\n    BLOCKQUOTE_FONT_SIZE,\n\n    LEAD_FONT_SIZE,\n    LEAD_FONT_WEIGHT,\n  } = constants;\n\n  const _classes = {\n\n    hr: {\n      marginTop: HR_MARGIN_Y,\n      marginBottom: HR_MARGIN_Y,\n      borderWidth: 0,\n      borderTopWidth: HR_BORDER_WIDTH,\n      borderTopColor: HR_BORDER_COLOR,\n      borderStyle: 'solid',\n    },\n\n    textSmall: {\n      fontSize: FONT_SIZE_SM,\n    },\n\n    textLarge: {\n      fontSize: FONT_SIZE_LG,\n    },\n\n    mark: {\n      padding: MARK_PADDING,\n      backgroundColor: MARK_BG,\n    },\n\n    listUnstyled: Object.assign({},\n      mixinListUnstyled,\n    ),\n\n    // Inline turns list items into inline-block\n    // .list-inline {\n    //   @include list-unstyled();\n    // }\n    // .list-inline-item {\n    //   display: inline-block;\n\n    //   &:not(:last-child) {\n    //     margin-right: $list-inline-padding;\n    //   }\n    // }\n\n    initialism: {\n      // reserved / @include font-size(90%),\n      textTransform: 'uppercase',\n    },\n\n    blockquote: {\n      marginBottom: SPACER,\n      fontSize: BLOCKQUOTE_FONT_SIZE,\n    },\n\n    // blockquoteFooter {\n    //   display: block;\n    //   @include font-size($blockquote-small-font-size);\n    //   color: $blockquote-small-color;\n\n    //   &::before {\n    //     content: \"\\2014\\00A0\"; // em dash, nbsp\n    //   }\n    // },\n\n    lead: {\n      fontSize: LEAD_FONT_SIZE,\n      fontWeight: LEAD_FONT_WEIGHT,\n    },\n  };\n\n  // h1, h2, h3, ...\n  const HEADINGS_SIZES = [H1_FONT_SIZE, H2_FONT_SIZE, H3_FONT_SIZE, H4_FONT_SIZE, H5_FONT_SIZE, H6_FONT_SIZE];\n  ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'].forEach((item, index) => {\n    classes[item] = {\n      fontSize: HEADINGS_SIZES[index],\n      marginBottom: HEADINGS_MARGIN_BOTTOM,\n      fontFamily: HEADINGS_FONT_FAMILY,\n      fontWeight: HEADINGS_FONT_WEIGHT,\n      color: HEADINGS_COLOR,\n      lineHeight: HEADINGS_SIZES[index] * 1.2, // temporal\n      // RESERVED / lineHeight: HEADINGS_SIZES[index] / FONT_SIZE_BASE * LINE_HEIGHT_BASE,\n    };\n  });\n\n  // // Type display classes\n  // .display-1 {\n  //   font-size: $display1-size;\n  //   font-weight: $display1-weight;\n  //   line-height: $display-line-height;\n  // }\n  // .display-2 {\n  //   font-size: $display2-size;\n  //   font-weight: $display2-weight;\n  //   line-height: $display-line-height;\n  // }\n  // .display-3 {\n  //   font-size: $display3-size;\n  //   font-weight: $display3-weight;\n  //   line-height: $display-line-height;\n  // }\n  // .display-4 {\n  //   font-size: $display4-size;\n  //   font-weight: $display4-weight;\n  //   line-height: $display-line-height;\n  // }\n\n  // aliases\n  _classes.small = _classes.textSmall\n  _classes.large = _classes.textLarge\n\n  return _classes;\n};\n"]},"metadata":{},"sourceType":"module"}