{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/ashish/Downloads/covid kunal/screens/VaccinationTracker.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect as UF, useState as US } from 'react';\nimport country from \"../country_name.json\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { useNavigation } from '@react-navigation/core';\nimport { auth } from \"../firebase\";\nimport BSSS from \"react-native-bootstrap-styles\";\nimport axios from \"axios\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nimport csvToJson from \"csvtojson\";\nvar bs4 = new BSSS();\nvar api = {\n  host: \"covid-19-data.p.rapidapi.com\",\n  key: \"a901adf65bmsh6117e03f2efb58fp196bfdjsnc8a1c7c8b2ab\"\n};\nvar COLORS = {\n  primary: \"#252c4a\",\n  secondary: '#1E90FF',\n  accent: '#3498db',\n  success: '#00C851',\n  error: '#ff4444',\n  black: \"#171717\",\n  white: \"#FFFFFF\",\n  background: \"#252C4A\"\n};\nSIZES = {\n  base: 10,\n  width: width,\n  height: height\n};\n\nvar VaccinationTracker = function VaccinationTracker() {\n  var _auth$currentUser;\n\n  var s = bs4.s,\n      c = bs4.c;\n  var navigation = useNavigation();\n\n  var _US = US(null),\n      _US2 = _slicedToArray(_US, 2),\n      pcode = _US2[0],\n      setPCode = _US2[1];\n\n  var _US3 = US(null),\n      _US4 = _slicedToArray(_US3, 2),\n      vaccData = _US4[0],\n      setVaccData = _US4[1];\n\n  var _US5 = US(null),\n      _US6 = _slicedToArray(_US5, 2),\n      alert = _US6[0],\n      setAlert = _US6[1];\n\n  var _US7 = US(false),\n      _US8 = _slicedToArray(_US7, 2),\n      isLoading = _US8[0],\n      setIsLoading = _US8[1];\n\n  var _US9 = US(null),\n      _US10 = _slicedToArray(_US9, 2),\n      statusData = _US10[0],\n      setStatusData = _US10[1];\n\n  var getVaccinationData = function getVaccinationData() {\n    setIsLoading(true);\n    axios.get(\"https://7efc-103-195-249-237.ngrok.io\" + \"/track?\" + \"postal_code=\" + pcode).then(function (response) {\n      setIsLoading(false);\n\n      if (response.data.success) {\n        setVaccData(response.data);\n        setAlert(null);\n      } else {\n        setAlert(\"vaccination data fetch failed\");\n      }\n    }).catch(function (error) {\n      setIsLoading(false);\n      setAlert(error.toString());\n    });\n  };\n\n  var getVaccinationStatus = function getVaccinationStatus() {\n    var res, csvdata;\n    return _regeneratorRuntime.async(function getVaccinationStatus$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(axios.get(\"https://health-infobase.canada.ca/src/data/covidLive/vaccination-coverage-overall.csv\"));\n\n          case 3:\n            res = _context.sent;\n\n            if (!(res.status != 200)) {\n              _context.next = 6;\n              break;\n            }\n\n            throw Error(\"vaccination status fetch failed\");\n\n          case 6:\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(csvToJson().fromString(res.data));\n\n          case 8:\n            csvdata = _context.sent;\n            setStatusData(csvdata.splice(csvdata.length - 10).reverse());\n            _context.next = 16;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](0);\n            setStatusData(null);\n            setAlert(_context.t0.toString());\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 12]], Promise);\n  };\n\n  UF(function () {\n    getVaccinationStatus();\n  }, []);\n\n  var renderNextButton = function renderNextButton() {\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, alert && React.createElement(View, {\n      style: {\n        marginTop: 10,\n        width: '100%',\n        backgroundColor: COLORS.white,\n        padding: 10,\n        borderRadius: 5\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 17,\n        color: COLORS.error,\n        textAlign: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    }, alert)), React.createElement(View, {\n      style: {\n        marginTop: 5,\n        width: '100%',\n        backgroundColor: COLORS.accent,\n        padding: 10,\n        borderRadius: 5\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 20,\n        color: COLORS.white,\n        textAlign: 'center',\n        marginBottom: 5\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    }, \"Enter your postal code\"), React.createElement(TextInput, {\n      style: {\n        fontSize: 25,\n        backgroundColor: COLORS.white,\n        color: COLORS.white,\n        textAlign: 'center'\n      },\n      onChange: function onChange(e) {\n        return setPCode(e.nativeEvent.text);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }), React.createElement(Text, {\n      style: {\n        fontSize: 15,\n        color: COLORS.white\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, \"postal should be of  6 characters\"), React.createElement(View, {\n      style: [s.formGroup],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        getVaccinationData();\n        setIsLoading(true);\n      },\n      style: {\n        marginTop: 10,\n        width: '100%',\n        backgroundColor: COLORS.background,\n        padding: 10,\n        borderRadius: 5\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 20,\n        color: COLORS.white,\n        textAlign: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 29\n      }\n    }, \"Fetch\")))), React.createElement(View, {\n      style: {\n        marginTop: 5,\n        fontSize: 20,\n        textAlign: 'center',\n        alignContent: \"center\",\n        alignItems: \"center\",\n        width: \"100%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, vaccData && React.createElement(View, {\n      style: {\n        width: \"100%\",\n        backgroundColor: COLORS.white,\n        borderRadius: 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }\n    }, React.createElement(View, {\n      style: [s.cardBody],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 29\n      }\n    }, React.createElement(Text, {\n      style: [s.text, s.h3, s.cardTitle],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 33\n      }\n    }, \"Latest Vaccination Availability\"), React.createElement(Text, {\n      style: [s.text, s.h3, s.cardTitle],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 33\n      }\n    }, \"For Canada\"), React.createElement(Text, {\n      style: [s.text, s.h4, s.cardSubtitle, s.p1],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 33\n      }\n    }, \"PHU: \", vaccData.unit), React.createElement(Text, {\n      style: [s.text, s.h4, s.cardSubtitle, s.p1],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 33\n      }\n    }, vaccData.texts[0]), React.createElement(Text, {\n      style: [s.text, s.h4, s.cardSubtitle, s.p1],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 33\n      }\n    }, vaccData.texts[1], \" \", vaccData.texts[2])))), React.createElement(View, {\n      style: {\n        marginTop: 10,\n        width: '100%',\n        backgroundColor: COLORS.accent,\n        padding: 10,\n        borderRadius: 5\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 20,\n        color: COLORS.white,\n        textAlign: 'center',\n        marginBottom: 5\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }, \"Get Latest Vaccination Status\"), React.createElement(View, {\n      style: [s.formGroup],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        getVaccinationStatus();\n        setIsLoading(true);\n      },\n      style: {\n        marginTop: 10,\n        width: '100%',\n        backgroundColor: COLORS.background,\n        padding: 10,\n        borderRadius: 5\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 20,\n        color: COLORS.white,\n        textAlign: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 29\n      }\n    }, \"Refresh\")))), React.createElement(View, {\n      style: {\n        marginTop: 5,\n        fontSize: 20,\n        textAlign: 'center',\n        alignContent: \"center\",\n        alignItems: \"center\",\n        width: \"100%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }, statusData && statusData.map(function (itm, idx) {\n      return React.createElement(View, {\n        key: idx,\n        style: {\n          width: \"100%\",\n          backgroundColor: COLORS.white,\n          borderRadius: 10,\n          margin: 5\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 29\n        }\n      }, React.createElement(View, {\n        style: [s.cardBody],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        style: [s.text, s.h3, s.cardTitle],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 37\n        }\n      }, \"Last updated on \", itm.week_end), React.createElement(Text, {\n        style: [s.text, s.h4, s.cardSubtitle, s.p1],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 37\n        }\n      }, \"First Dose : \", itm.prop_atleast1dose, \"%\"), React.createElement(Text, {\n        style: [s.text, s.h4, s.cardSubtitle, s.p1],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 37\n        }\n      }, \"First Dose Total : \", itm.numtotal_atleast1dose), React.createElement(Text, {\n        style: [s.text, s.h4, s.cardSubtitle, s.p1],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 37\n        }\n      }, \"Fully Vaccinated : \", itm.prop_fully, \"%\"), React.createElement(Text, {\n        style: [s.text, s.h4, s.cardSubtitle, s.p1],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 37\n        }\n      }, \"Fully Vaccinated Total : \", itm.numtotal_fully)));\n    })), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.replace('Home');\n      },\n      style: {\n        marginTop: 20,\n        width: '100%',\n        backgroundColor: COLORS.accent,\n        padding: 20,\n        borderRadius: 5\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 20,\n        color: COLORS.white,\n        textAlign: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }\n    }, \"Go Back\")));\n  };\n\n  return React.createElement(ScrollView, {\n    style: {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, React.createElement(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, React.createElement(StatusBar, {\n    barStyle: \"light-content\",\n    backgroundColor: COLORS.primary,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: {\n      flex: 1,\n      paddingVertical: 40,\n      paddingHorizontal: 16,\n      backgroundColor: COLORS.background,\n      position: 'relative'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      marginBottom: 5,\n      fontSize: 25,\n      color: COLORS.white,\n      textAlign: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 21\n    }\n  }, \"Currently logged in as: \", (_auth$currentUser = auth.currentUser) == null ? void 0 : _auth$currentUser.email), renderNextButton())));\n};\n\nexport default VaccinationTracker;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  button: {\n    backgroundColor: '#0782F9',\n    width: '60%',\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center',\n    marginTop: 40\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: '700',\n    fontSize: 16\n  }\n});","map":{"version":3,"sources":["/Users/ashish/Downloads/covid kunal/screens/VaccinationTracker.js"],"names":["React","useEffect","UF","useState","US","country","useNavigation","auth","BSSS","axios","Dimensions","get","width","height","csvToJson","bs4","api","host","key","COLORS","primary","secondary","accent","success","error","black","white","background","SIZES","base","VaccinationTracker","s","c","navigation","pcode","setPCode","vaccData","setVaccData","alert","setAlert","isLoading","setIsLoading","statusData","setStatusData","getVaccinationData","then","response","data","catch","toString","getVaccinationStatus","res","status","Error","fromString","csvdata","splice","length","reverse","renderNextButton","marginTop","backgroundColor","padding","borderRadius","fontSize","color","textAlign","marginBottom","e","nativeEvent","text","formGroup","alignContent","alignItems","cardBody","h3","cardTitle","h4","cardSubtitle","p1","unit","texts","map","itm","idx","margin","week_end","prop_atleast1dose","numtotal_atleast1dose","prop_fully","numtotal_fully","replace","flex","paddingVertical","paddingHorizontal","position","currentUser","email","styles","StyleSheet","create","container","justifyContent","button","buttonText","fontWeight"],"mappings":"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","sourcesContent":["import React, { useEffect as UF, useState as US } from 'react'\nimport country from \"../country_name.json\"\nimport { View, Text, SafeAreaView, StatusBar, TextInput, Image, TouchableOpacity, Modal, Animated, ScrollView, StyleSheet } from 'react-native'\nimport { Dimensions } from \"react-native\"\nimport { useNavigation } from '@react-navigation/core'\nimport { auth } from '../firebase'\nimport BSSS from \"react-native-bootstrap-styles\"\nimport axios from \"axios\";\nconst { width, height } = Dimensions.get('window');\nimport csvToJson from \"csvtojson\"\n\nconst bs4 = new BSSS()\n\nconst api = {\n    host: \"covid-19-data.p.rapidapi.com\",\n    key: \"a901adf65bmsh6117e03f2efb58fp196bfdjsnc8a1c7c8b2ab\"\n}\n\nconst COLORS = {\n    primary: \"#252c4a\",\n    secondary: '#1E90FF',\n    accent: '#3498db',\n\n    success: '#00C851',\n    error: '#ff4444',\n\n    black: \"#171717\",\n    white: \"#FFFFFF\",\n    background: \"#252C4A\"\n}\n\nSIZES = {\n    base: 10,\n    width,\n    height\n}\n\nconst VaccinationTracker = () => {\n\n    const { s, c } = bs4\n    const navigation = useNavigation()\n    const [pcode, setPCode] = US(null)\n    const [vaccData, setVaccData] = US(null)\n    const [alert, setAlert] = US(null)\n    const [isLoading, setIsLoading] = US(false)\n    const [statusData, setStatusData] = US(null)\n\n    const getVaccinationData = () => {\n        setIsLoading(true)\n        axios.get(\"https://7efc-103-195-249-237.ngrok.io\" + \"/track?\" + \"postal_code=\" + pcode)\n            .then(response => {\n                setIsLoading(false)\n                if (response.data.success) {\n                    setVaccData(response.data)\n                    setAlert(null)\n                } else {\n                    setAlert(\"vaccination data fetch failed\")\n                }\n            })\n            .catch(error => {\n                setIsLoading(false)\n                setAlert(error.toString())\n            })\n    }\n\n    const getVaccinationStatus = async () => {\n        try {\n\n            const res = await axios.get(\"https://health-infobase.canada.ca/src/data/covidLive/vaccination-coverage-overall.csv\")\n\n            if (res.status != 200) throw Error(\"vaccination status fetch failed\")\n\n            const csvdata = await csvToJson().fromString(res.data)\n\n            // console.log(\"============= \", csvdata.splice((csvdata.length - 10)))\n            setStatusData(csvdata.splice((csvdata.length - 10)).reverse())\n        } catch (error) {\n            setStatusData(null)\n            setAlert(error.toString())\n        }\n    }\n\n    UF(() => {\n        getVaccinationStatus()\n    }, [])\n\n    const renderNextButton = () => {\n\n        return (\n            <View>\n                {/* alert */}\n                {\n                    alert &&\n                    <View style={{ marginTop: 10, width: '100%', backgroundColor: COLORS.white, padding: 10, borderRadius: 5 }}>\n                        <Text style={{ fontSize: 17, color: COLORS.error, textAlign: 'center' }}>{alert}</Text>\n                    </View>\n                }\n\n                {/* postal code input form */}\n                <View style={{ marginTop: 5, width: '100%', backgroundColor: COLORS.accent, padding: 10, borderRadius: 5 }}>\n                    <Text style={{ fontSize: 20, color: COLORS.white, textAlign: 'center', marginBottom: 5 }}>Enter your postal code</Text>\n                    <TextInput style={{ fontSize: 25, backgroundColor: COLORS.white, color: COLORS.white, textAlign: 'center' }} onChange={(e) => setPCode(e.nativeEvent.text)}></TextInput>\n                    <Text style={{ fontSize: 15, color: COLORS.white }}>postal should be of  6 characters</Text>\n                    <View style={[s.formGroup]}>\n                        <TouchableOpacity\n                            onPress={() => {\n                                getVaccinationData()\n                                setIsLoading(true)\n                            }}\n                            style={{ marginTop: 10, width: '100%', backgroundColor: COLORS.background, padding: 10, borderRadius: 5 }}\n                        >\n                            <Text style={{ fontSize: 20, color: COLORS.white, textAlign: 'center' }}>Fetch</Text>\n                        </TouchableOpacity>\n                    </View>\n                </View>\n\n                {/* display vaccination data */}\n                <View style={{ marginTop: 5, fontSize: 20, textAlign: 'center', alignContent: \"center\", alignItems: \"center\", width: \"100%\" }}>\n                    {\n                        vaccData &&\n                        <View style={{ width: \"100%\", backgroundColor: COLORS.white, borderRadius: 10 }}>\n                            <View style={[s.cardBody]}>\n                                <Text style={[s.text, s.h3, s.cardTitle]}>Latest Vaccination Availability</Text>\n                                <Text style={[s.text, s.h3, s.cardTitle]}>For Canada</Text>\n                                <Text style={[s.text, s.h4, s.cardSubtitle, s.p1]}>PHU: {vaccData.unit}</Text>\n                                <Text style={[s.text, s.h4, s.cardSubtitle, s.p1]}>{vaccData.texts[0]}</Text>\n                                <Text style={[s.text, s.h4, s.cardSubtitle, s.p1]}>{vaccData.texts[1]} {vaccData.texts[2]}</Text>\n                            </View>\n                        </View>\n                    }\n                </View>\n                {/* vaccination tracker */}\n                <View style={{ marginTop: 10, width: '100%', backgroundColor: COLORS.accent, padding: 10, borderRadius: 5 }}>\n                    <Text style={{ fontSize: 20, color: COLORS.white, textAlign: 'center', marginBottom: 5 }}>Get Latest Vaccination Status</Text>\n                    <View style={[s.formGroup]}>\n                        <TouchableOpacity\n                            onPress={() => {\n                                getVaccinationStatus()\n                                setIsLoading(true)\n                            }}\n                            style={{ marginTop: 10, width: '100%', backgroundColor: COLORS.background, padding: 10, borderRadius: 5 }}\n                        >\n                            <Text style={{ fontSize: 20, color: COLORS.white, textAlign: 'center' }}>Refresh</Text>\n                        </TouchableOpacity>\n                    </View>\n                </View>\n                {/* display vaccination data */}\n                <View style={{ marginTop: 5, fontSize: 20, textAlign: 'center', alignContent: \"center\", alignItems: \"center\", width: \"100%\" }}>\n                    {\n                        statusData &&\n                        statusData.map((itm, idx) => (\n                            <View key={idx} style={{ width: \"100%\", backgroundColor: COLORS.white, borderRadius: 10, margin: 5 }}>\n                                <View style={[s.cardBody]}>\n                                    <Text style={[s.text, s.h3, s.cardTitle]}>Last updated on {itm.week_end}</Text>\n                                    <Text style={[s.text, s.h4, s.cardSubtitle, s.p1]}>First Dose : {itm.prop_atleast1dose}%</Text>\n                                    <Text style={[s.text, s.h4, s.cardSubtitle, s.p1]}>First Dose Total : {itm.numtotal_atleast1dose}</Text>\n                                    <Text style={[s.text, s.h4, s.cardSubtitle, s.p1]}>Fully Vaccinated : {itm.prop_fully}%</Text>\n                                    <Text style={[s.text, s.h4, s.cardSubtitle, s.p1]}>Fully Vaccinated Total : {itm.numtotal_fully}</Text>\n                                </View>\n                            </View>\n                        ))\n                    }\n                </View>\n                <TouchableOpacity\n                    onPress={() => navigation.replace('Home')}\n                    style={{ marginTop: 20, width: '100%', backgroundColor: COLORS.accent, padding: 20, borderRadius: 5 }}>\n                    <Text style={{ fontSize: 20, color: COLORS.white, textAlign: 'center' }}>Go Back</Text>\n                </TouchableOpacity>\n            </View>\n        )\n    }\n\n    return (\n        <ScrollView style={{}}>\n            <SafeAreaView style={{\n                flex: 1,\n            }}>\n                <StatusBar barStyle=\"light-content\" backgroundColor={COLORS.primary} />\n                <View style={{\n                    flex: 1,\n                    paddingVertical: 40,\n                    paddingHorizontal: 16,\n                    backgroundColor: COLORS.background,\n                    position: 'relative'\n                }}>\n                    <Text style={{ marginBottom: 5, fontSize: 25, color: COLORS.white, textAlign: 'center' }}>\n                        Currently logged in as: {auth.currentUser?.email}\n                    </Text>\n                    {renderNextButton()}\n                </View>\n            </SafeAreaView>\n        </ScrollView>\n\n    )\n}\n\nexport default VaccinationTracker\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    button: {\n        backgroundColor: '#0782F9',\n        width: '60%',\n        padding: 15,\n        borderRadius: 10,\n        alignItems: 'center',\n        marginTop: 40,\n    },\n    buttonText: {\n        color: 'white',\n        fontWeight: '700',\n        fontSize: 16,\n    },\n})"]},"metadata":{},"sourceType":"module"}