{"ast":null,"code":"export default function getClasses(constants, classes) {\n  var WHITE = constants.WHITE,\n      THEME_COLORS = constants.THEME_COLORS,\n      BORDER_COLOR = constants.BORDER_COLOR,\n      BORDER_WIDTH = constants.BORDER_WIDTH,\n      BORDER_RADIUS = constants.BORDER_RADIUS,\n      BORDER_RADIUS_SM = constants.BORDER_RADIUS_SM,\n      BORDER_RADIUS_LG = constants.BORDER_RADIUS_LG,\n      ROUNDED_PILL = constants.ROUNDED_PILL;\n  var _classes = {\n    border: {\n      borderColor: BORDER_COLOR,\n      borderWidth: BORDER_WIDTH,\n      borderStyle: 'solid'\n    },\n    borderTop: {\n      borderColor: BORDER_COLOR,\n      borderTopWidth: BORDER_WIDTH,\n      borderStyle: 'solid'\n    },\n    borderRight: {\n      borderColor: BORDER_COLOR,\n      borderRightWidth: BORDER_WIDTH,\n      borderStyle: 'solid'\n    },\n    borderBottom: {\n      borderColor: BORDER_COLOR,\n      borderBottomWidth: BORDER_WIDTH,\n      borderStyle: 'solid'\n    },\n    borderLeft: {\n      borderColor: BORDER_COLOR,\n      borderLeftWidth: BORDER_WIDTH,\n      borderStyle: 'solid'\n    },\n    border0: {\n      borderWidth: 0\n    },\n    borderTop0: {\n      borderTopWidth: 0\n    },\n    borderRight0: {\n      borderRightWidth: 0\n    },\n    borderBottom0: {\n      borderBottomWidth: 0\n    },\n    borderLeft0: {\n      borderLeftWidth: 0\n    },\n    borderWhite: {\n      borderColor: WHITE\n    },\n    borderRounded: {\n      borderRadius: BORDER_RADIUS\n    },\n    roundedSm: {\n      borderRadius: BORDER_RADIUS_SM\n    },\n    rounded: {\n      borderRadius: BORDER_RADIUS\n    },\n    roundedTop: {\n      borderTopLeftRadius: BORDER_RADIUS,\n      borderTopRightRadius: BORDER_RADIUS\n    },\n    roundedRight: {\n      borderTopRightRadius: BORDER_RADIUS,\n      borderBottomRightRadius: BORDER_RADIUS\n    },\n    roundedBottom: {\n      borderBottomRightRadius: BORDER_RADIUS,\n      borderBottomLeftRadius: BORDER_RADIUS\n    },\n    roundedLeft: {\n      borderTopLeftRadius: BORDER_RADIUS,\n      borderBottomLeftRadius: BORDER_RADIUS\n    },\n    roundedLg: {\n      borderRadius: BORDER_RADIUS_LG\n    },\n    roundedCircle: function roundedCircle(widthHeight) {\n      return widthHeight / 2;\n    },\n    roundedPill: {\n      borderRadius: ROUNDED_PILL\n    },\n    rounded0: {\n      borderRadius: 0\n    }\n  };\n  Object.keys(THEME_COLORS).forEach(function (item) {\n    var classColor = item.charAt(0).toUpperCase() + item.slice(1).toLowerCase();\n    _classes['border' + classColor] = {\n      borderColor: THEME_COLORS[item]\n    };\n  });\n  return _classes;\n}\n;","map":{"version":3,"sources":["/Users/ashish/Downloads/covid kunal/node_modules/react-native-bootstrap-styles/src/utilities/borders.js"],"names":["getClasses","constants","classes","WHITE","THEME_COLORS","BORDER_COLOR","BORDER_WIDTH","BORDER_RADIUS","BORDER_RADIUS_SM","BORDER_RADIUS_LG","ROUNDED_PILL","_classes","border","borderColor","borderWidth","borderStyle","borderTop","borderTopWidth","borderRight","borderRightWidth","borderBottom","borderBottomWidth","borderLeft","borderLeftWidth","border0","borderTop0","borderRight0","borderBottom0","borderLeft0","borderWhite","borderRounded","borderRadius","roundedSm","rounded","roundedTop","borderTopLeftRadius","borderTopRightRadius","roundedRight","borderBottomRightRadius","roundedBottom","borderBottomLeftRadius","roundedLeft","roundedLg","roundedCircle","widthHeight","roundedPill","rounded0","Object","keys","forEach","item","classColor","charAt","toUpperCase","slice","toLowerCase"],"mappings":"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","sourcesContent":["export default function getClasses(constants, classes) {\n  const {\n    WHITE,\n    THEME_COLORS,\n    BORDER_COLOR,\n    BORDER_WIDTH,\n    BORDER_RADIUS,\n    BORDER_RADIUS_SM,\n    BORDER_RADIUS_LG,\n    ROUNDED_PILL,\n  } = constants;\n\n  const _classes = {\n    // experimental\n    border: {\n      borderColor: BORDER_COLOR,\n      borderWidth: BORDER_WIDTH,\n      borderStyle: 'solid',\n    },\n\n    borderTop: {\n      borderColor: BORDER_COLOR,\n      borderTopWidth: BORDER_WIDTH,\n      borderStyle: 'solid',\n    },\n\n    borderRight: {\n      borderColor: BORDER_COLOR,\n      borderRightWidth: BORDER_WIDTH,\n      borderStyle: 'solid',\n    },\n\n    borderBottom: {\n      borderColor: BORDER_COLOR,\n      borderBottomWidth: BORDER_WIDTH,\n      borderStyle: 'solid',\n    },\n\n    borderLeft: {\n      borderColor: BORDER_COLOR,\n      borderLeftWidth: BORDER_WIDTH,\n      borderStyle: 'solid',\n    },\n\n    border0: {borderWidth: 0},\n    borderTop0: {borderTopWidth: 0},\n    borderRight0: {borderRightWidth: 0},\n    borderBottom0: {borderBottomWidth: 0},\n    borderLeft0: {borderLeftWidth: 0},\n\n    borderWhite: {borderColor: WHITE},\n\n    // DEPRECATED\n    borderRounded: {\n      borderRadius: BORDER_RADIUS,\n    },\n\n    roundedSm: {\n      borderRadius: BORDER_RADIUS_SM,\n    },\n\n    rounded: {\n      borderRadius: BORDER_RADIUS,\n    },\n\n    roundedTop: {\n      borderTopLeftRadius: BORDER_RADIUS,\n      borderTopRightRadius: BORDER_RADIUS,\n    },\n\n    roundedRight: {\n      borderTopRightRadius: BORDER_RADIUS,\n      borderBottomRightRadius: BORDER_RADIUS,\n    },\n\n    roundedBottom: {\n      borderBottomRightRadius: BORDER_RADIUS,\n      borderBottomLeftRadius: BORDER_RADIUS,\n    },\n\n    roundedLeft: {\n      borderTopLeftRadius: BORDER_RADIUS,\n      borderBottomLeftRadius: BORDER_RADIUS,\n    },\n\n    roundedLg: {\n      borderRadius: BORDER_RADIUS_LG,\n    },\n\n    // workaround / number, not percentage, accepted only\n    roundedCircle: widthHeight => widthHeight / 2,\n\n    roundedPill: {\n      borderRadius: ROUNDED_PILL,\n    },\n\n    rounded0: {\n      borderRadius: 0,\n    },\n  };\n\n  // border%color / ex: borderPrimary\n  Object.keys(THEME_COLORS).forEach((item) => {\n    const classColor = item.charAt(0).toUpperCase() + item.slice(1).toLowerCase();\n    _classes['border' + classColor] = {borderColor: THEME_COLORS[item]};\n  });\n\n  return _classes;\n};\n"]},"metadata":{},"sourceType":"module"}