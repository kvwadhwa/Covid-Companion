{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/ashish/Downloads/covid kunal/screens/TestTracker.js\";\n\nimport React, { useState as US } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport data from \"./TestData\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { useNavigation } from '@react-navigation/core';\nimport { store } from \"../firebase\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar COLORS = {\n  primary: \"#252c4a\",\n  secondary: '#1E90FF',\n  accent: '#3498db',\n  success: '#00C851',\n  error: '#ff4444',\n  black: \"#171717\",\n  white: \"#FFFFFF\",\n  background: \"#252C4A\"\n};\nSIZES = {\n  base: 10,\n  width: width,\n  height: height\n};\n\nvar SurveyScreen = function SurveyScreen() {\n  var navigation = useNavigation();\n  var allQuestions = data;\n\n  var _US = US(0),\n      _US2 = _slicedToArray(_US, 2),\n      currentQuestionIndex = _US2[0],\n      setCurrentQuestionIndex = _US2[1];\n\n  var _US3 = US(null),\n      _US4 = _slicedToArray(_US3, 2),\n      currentOptionSelected = _US4[0],\n      setCurrentOptionSelected = _US4[1];\n\n  var _US5 = US(null),\n      _US6 = _slicedToArray(_US5, 2),\n      correctOption = _US6[0],\n      setCorrectOption = _US6[1];\n\n  var _US7 = US(false),\n      _US8 = _slicedToArray(_US7, 2),\n      isOptionsDisabled = _US8[0],\n      setIsOptionsDisabled = _US8[1];\n\n  var _US9 = US(0),\n      _US10 = _slicedToArray(_US9, 2),\n      score = _US10[0],\n      setScore = _US10[1];\n\n  var _US11 = US(false),\n      _US12 = _slicedToArray(_US11, 2),\n      showNextButton = _US12[0],\n      setShowNextButton = _US12[1];\n\n  var _US13 = US(false),\n      _US14 = _slicedToArray(_US13, 2),\n      showScoreModal = _US14[0],\n      setShowScoreModal = _US14[1];\n\n  var _US15 = US(\"\"),\n      _US16 = _slicedToArray(_US15, 2),\n      user = _US16[0],\n      setUser = _US16[1];\n\n  var _US17 = US(\"\"),\n      _US18 = _slicedToArray(_US17, 2),\n      result = _US18[0],\n      setResult = _US18[1];\n\n  var _US19 = US(null),\n      _US20 = _slicedToArray(_US19, 2),\n      testType = _US20[0],\n      setTestType = _US20[1];\n\n  var validateAnswer = function validateAnswer(selectedOption) {\n    var correct_option = allQuestions[currentQuestionIndex]['correct_option'];\n    setCurrentOptionSelected(selectedOption);\n    setCorrectOption(correct_option);\n\n    if (selectedOption == correct_option) {\n      setScore(score + 1);\n    } else {\n      if (selectedOption == \"positive\" || selectedOption == \"mild\" || selectedOption == \"negative\") setResult(selectedOption);else setTestType(selectedOption);\n    }\n\n    setShowNextButton(true);\n  };\n\n  var pushToStore = function pushToStore() {\n    var d = new Date();\n    store.collection(\"tests\").add({\n      user: user,\n      test_type: testType,\n      result: result,\n      last_updated: d.getDate() + \" - \" + d.getMonth() + \" - \" + d.getFullYear()\n    }).then(function (res) {\n      console.log(\"test data pushed - \", res.id);\n    }).catch(function (err) {\n      console.log(\"test data update error - \", err.toString());\n    });\n  };\n\n  var handleNext = function handleNext() {\n    if (currentQuestionIndex == allQuestions.length - 1) {\n      setShowScoreModal(true);\n      pushToStore();\n    } else {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      setCurrentOptionSelected(null);\n      setCorrectOption(null);\n      setIsOptionsDisabled(false);\n      setShowNextButton(false);\n    }\n\n    Animated.timing(progress, {\n      toValue: currentQuestionIndex + 1,\n      duration: 1000,\n      useNativeDriver: false\n    }).start();\n  };\n\n  var restartQuiz = function restartQuiz() {\n    setShowScoreModal(false);\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setCurrentOptionSelected(null);\n    setCorrectOption(null);\n    setIsOptionsDisabled(false);\n    setShowNextButton(false);\n    Animated.timing(progress, {\n      toValue: 0,\n      duration: 1000,\n      useNativeDriver: false\n    }).start();\n  };\n\n  var renderInputUserName = function renderInputUserName() {\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, React.createElement(TextInput, {\n      style: {\n        fontSize: 20,\n        backgroundColor: COLORS.white,\n        textAlign: 'center',\n        padding: 10,\n        borderRadius: 5,\n        borderColor: \"black\"\n      },\n      value: user,\n      placeholder: \"Enter the name of the user\",\n      onChange: function onChange(e) {\n        setUser(e.nativeEvent.text);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }));\n  };\n\n  var renderQuestion = function renderQuestion() {\n    var _allQuestions$current;\n\n    return React.createElement(View, {\n      style: {\n        marginVertical: 40\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: {\n        flexDirection: 'row',\n        alignItems: 'flex-end'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: COLORS.white,\n        fontSize: 20,\n        opacity: 0.6,\n        marginRight: 2\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }, currentQuestionIndex + 1), React.createElement(Text, {\n      style: {\n        color: COLORS.white,\n        fontSize: 18,\n        opacity: 0.6\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    }, \"/ \", allQuestions.length)), React.createElement(Text, {\n      style: {\n        color: COLORS.white,\n        fontSize: 30\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }, (_allQuestions$current = allQuestions[currentQuestionIndex]) == null ? void 0 : _allQuestions$current.question));\n  };\n\n  var renderOptions = function renderOptions() {\n    var _allQuestions$current2;\n\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }, (_allQuestions$current2 = allQuestions[currentQuestionIndex]) == null ? void 0 : _allQuestions$current2.options.map(function (option) {\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return validateAnswer(option);\n        },\n        disabled: isOptionsDisabled,\n        key: option,\n        style: {\n          borderWidth: 3,\n          borderColor: option == currentOptionSelected ? COLORS.success : option == currentOptionSelected ? COLORS.error : COLORS.secondary + '40',\n          backgroundColor: option == correctOption ? COLORS.success + '20' : option == currentOptionSelected ? COLORS.error + '20' : COLORS.secondary + '20',\n          height: 60,\n          borderRadius: 20,\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n          paddingHorizontal: 20,\n          marginVertical: 10\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 20,\n          color: COLORS.white\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 29\n        }\n      }, option), option == correctOption ? React.createElement(View, {\n        style: {},\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 37\n        }\n      }) : option == currentOptionSelected ? React.createElement(View, {\n        style: {\n          width: 30,\n          height: 30,\n          borderRadius: 30 / 2,\n          backgroundColor: COLORS.error,\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 37\n        }\n      }) : null);\n    }));\n  };\n\n  var renderNextButton = function renderNextButton() {\n    if (showNextButton) {\n      return React.createElement(TouchableOpacity, {\n        onPress: handleNext,\n        style: {\n          marginTop: 20,\n          width: '100%',\n          backgroundColor: COLORS.accent,\n          padding: 20,\n          borderRadius: 5\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 20,\n          color: COLORS.white,\n          textAlign: 'center'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }\n      }, \"Next\"));\n    } else {\n      return null;\n    }\n  };\n\n  var _US21 = US(new Animated.Value(0)),\n      _US22 = _slicedToArray(_US21, 2),\n      progress = _US22[0],\n      setProgress = _US22[1];\n\n  var progressAnim = progress.interpolate({\n    inputRange: [0, allQuestions.length],\n    outputRange: ['0%', '100%']\n  });\n\n  var renderProgressBar = function renderProgressBar() {\n    return React.createElement(View, {\n      style: {\n        width: '100%',\n        height: 20,\n        borderRadius: 20,\n        backgroundColor: '#00000020'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 13\n      }\n    }, React.createElement(Animated.View, {\n      style: [{\n        height: 20,\n        borderRadius: 20,\n        backgroundColor: COLORS.accent\n      }, {\n        width: progressAnim\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }\n    }));\n  };\n\n  return React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }\n  }, React.createElement(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }\n  }, React.createElement(StatusBar, {\n    barStyle: \"light-content\",\n    backgroundColor: COLORS.primary,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: {\n      flex: 1,\n      paddingVertical: 40,\n      paddingHorizontal: 16,\n      backgroundColor: COLORS.background,\n      position: 'relative'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 17\n    }\n  }, renderProgressBar(), renderInputUserName(), renderQuestion(), renderOptions(), renderNextButton(), React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: showScoreModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: COLORS.primary,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 25\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: COLORS.white,\n      width: '90%',\n      borderRadius: 20,\n      padding: 20,\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 25,\n      fontWeight: 'bold'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 33\n    }\n  }, score > allQuestions.length - 1 ? 'You do not have any severe symptoms' : 'You seem not healthy, please check in hospital'), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      marginVertical: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 33\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 20,\n      color: score > allQuestions.length / 2 ? COLORS.success : COLORS.error\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 37\n    }\n  }, \"This information has been recorded in your history\")), React.createElement(TouchableOpacity, {\n    onPress: restartQuiz,\n    style: {\n      backgroundColor: COLORS.accent,\n      padding: 20,\n      width: '100%',\n      borderRadius: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 33\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: 'center',\n      color: COLORS.white,\n      fontSize: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 37\n    }\n  }, \"Go Back!\"))))))), React.createElement(View, {\n    style: {\n      marginTop: 0,\n      flex: 1,\n      paddingVertical: 40,\n      paddingHorizontal: 16,\n      backgroundColor: COLORS.background,\n      position: 'relative'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.replace('Home');\n    },\n    style: {\n      marginTop: 20,\n      width: '100%',\n      backgroundColor: COLORS.accent,\n      padding: 20,\n      borderRadius: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 20,\n      color: COLORS.white,\n      textAlign: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 21\n    }\n  }, \"Go Back\"))));\n};\n\nexport default SurveyScreen;","map":{"version":3,"sources":["/Users/ashish/Downloads/covid kunal/screens/TestTracker.js"],"names":["React","useState","US","data","useNavigation","store","Dimensions","get","width","height","COLORS","primary","secondary","accent","success","error","black","white","background","SIZES","base","SurveyScreen","navigation","allQuestions","currentQuestionIndex","setCurrentQuestionIndex","currentOptionSelected","setCurrentOptionSelected","correctOption","setCorrectOption","isOptionsDisabled","setIsOptionsDisabled","score","setScore","showNextButton","setShowNextButton","showScoreModal","setShowScoreModal","user","setUser","result","setResult","testType","setTestType","validateAnswer","selectedOption","correct_option","pushToStore","d","Date","collection","add","test_type","last_updated","getDate","getMonth","getFullYear","then","res","console","log","id","catch","err","toString","handleNext","length","Animated","timing","progress","toValue","duration","useNativeDriver","start","restartQuiz","renderInputUserName","fontSize","backgroundColor","textAlign","padding","borderRadius","borderColor","e","nativeEvent","text","renderQuestion","marginVertical","flexDirection","alignItems","color","opacity","marginRight","question","renderOptions","options","map","option","borderWidth","justifyContent","paddingHorizontal","renderNextButton","marginTop","Value","setProgress","progressAnim","interpolate","inputRange","outputRange","renderProgressBar","flex","paddingVertical","position","fontWeight","replace"],"mappings":"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","sourcesContent":["import React, { useState as US } from 'react'\nimport { View, Text, SafeAreaView, StatusBar, TextInput, TouchableOpacity, Modal, Animated, ScrollView } from 'react-native'\nimport data from './TestData'\nimport { Dimensions } from \"react-native\"\nimport { useNavigation } from '@react-navigation/core'\nimport { store } from '../firebase'\nconst { width, height } = Dimensions.get('window');\n\nconst COLORS = {\n    primary: \"#252c4a\",\n    secondary: '#1E90FF',\n    accent: '#3498db',\n\n    success: '#00C851',\n    error: '#ff4444',\n\n    black: \"#171717\",\n    white: \"#FFFFFF\",\n    background: \"#252C4A\"\n}\n\nSIZES = {\n    base: 10,\n    width,\n    height\n}\n\nconst SurveyScreen = () => {\n    const navigation = useNavigation()\n    const allQuestions = data;\n    const [currentQuestionIndex, setCurrentQuestionIndex] = US(0)\n    const [currentOptionSelected, setCurrentOptionSelected] = US(null);\n    const [correctOption, setCorrectOption] = US(null);\n    const [isOptionsDisabled, setIsOptionsDisabled] = US(false);\n    const [score, setScore] = US(0)\n    const [showNextButton, setShowNextButton] = US(false)\n    const [showScoreModal, setShowScoreModal] = US(false)\n    const [user, setUser] = US(\"\")\n    const [result, setResult] = US(\"\")\n    const [testType, setTestType] = US(null)\n\n    const validateAnswer = (selectedOption) => {\n        let correct_option = allQuestions[currentQuestionIndex]['correct_option'];\n        setCurrentOptionSelected(selectedOption);\n        setCorrectOption(correct_option);\n        // setIsOptionsDisabled(true);\n        if (selectedOption == correct_option) {\n            // Set Score\n            setScore(score + 1)\n        } else {\n            if (selectedOption == \"positive\" || selectedOption == \"mild\" || selectedOption == \"negative\") setResult(selectedOption)\n            else setTestType(selectedOption)\n        }\n        // Show Next Button\n        setShowNextButton(true)\n    }\n\n    const pushToStore = () => {\n        const d = new Date()\n        store.collection(\"tests\").add({\n            user: user,\n            test_type: testType,\n            result: result,\n            last_updated: `${d.getDate()} - ${d.getMonth()} - ${d.getFullYear()}`\n        })\n        .then(res => {\n            console.log(\"test data pushed - \", res.id)\n        })\n        .catch(err => {\n            console.log(\"test data update error - \", err.toString())\n        })\n    }\n\n    const handleNext = () => {\n        if (currentQuestionIndex == allQuestions.length - 1) {\n            // Last Question\n            // Show Score Modal\n            setShowScoreModal(true)\n            pushToStore()\n        } else {\n            setCurrentQuestionIndex(currentQuestionIndex + 1);\n            setCurrentOptionSelected(null);\n            setCorrectOption(null);\n            setIsOptionsDisabled(false);\n            setShowNextButton(false);\n        }\n        Animated.timing(progress, {\n            toValue: currentQuestionIndex + 1,\n            duration: 1000,\n            useNativeDriver: false\n        }).start();\n    }\n    const restartQuiz = () => {\n        setShowScoreModal(false);\n\n        setCurrentQuestionIndex(0);\n        setScore(0);\n\n        setCurrentOptionSelected(null);\n        setCorrectOption(null);\n        setIsOptionsDisabled(false);\n        setShowNextButton(false);\n        Animated.timing(progress, {\n            toValue: 0,\n            duration: 1000,\n            useNativeDriver: false\n        }).start();\n    }\n\n    const renderInputUserName = () => {\n        return (\n            <View>\n                <TextInput\n                    style={{ fontSize: 20, backgroundColor: COLORS.white, textAlign: 'center', padding: 10, borderRadius: 5, borderColor: \"black\" }}\n                    value={user}\n                    placeholder='Enter the name of the user'\n                    onChange={(e) => {\n                        setUser(e.nativeEvent.text)\n                    }}\n                ></TextInput>\n            </View>\n        )\n    }\n\n    const renderQuestion = () => {\n        return (\n            <View style={{\n                marginVertical: 40\n            }}>\n                {/* Question Counter */}\n                <View style={{\n                    flexDirection: 'row',\n                    alignItems: 'flex-end'\n                }}>\n                    <Text style={{ color: COLORS.white, fontSize: 20, opacity: 0.6, marginRight: 2 }}>{currentQuestionIndex + 1}</Text>\n                    <Text style={{ color: COLORS.white, fontSize: 18, opacity: 0.6 }}>/ {allQuestions.length}</Text>\n                </View>\n\n                {/* Question */}\n                <Text style={{\n                    color: COLORS.white,\n                    fontSize: 30\n                }}>{allQuestions[currentQuestionIndex]?.question}</Text>\n            </View>\n        )\n    }\n    const renderOptions = () => {\n        return (\n            <View>\n                {\n                    allQuestions[currentQuestionIndex]?.options.map(option => (\n                        <TouchableOpacity\n                            onPress={() => validateAnswer(option)}\n                            disabled={isOptionsDisabled}\n                            key={option}\n                            style={{\n                                borderWidth: 3,\n                                borderColor: option == currentOptionSelected\n                                    ? COLORS.success\n                                    : option == currentOptionSelected\n                                        ? COLORS.error\n                                        : COLORS.secondary + '40',\n                                backgroundColor: option == correctOption\n                                    ? COLORS.success + '20'\n                                    : option == currentOptionSelected\n                                        ? COLORS.error + '20'\n                                        : COLORS.secondary + '20',\n                                height: 60, borderRadius: 20,\n                                flexDirection: 'row',\n                                alignItems: 'center', justifyContent: 'space-between',\n                                paddingHorizontal: 20,\n                                marginVertical: 10\n                            }}\n                        >\n                            <Text style={{ fontSize: 20, color: COLORS.white }}>{option}</Text>\n\n                            {/* Show Check Or Cross Icon based on correct answer*/}\n                            {\n                                option == correctOption ? (\n                                    <View style={{\n                                        // width: 30, height: 30, borderRadius: 30/2,\n                                        // backgroundColor: COLORS.success,\n                                        // justifyContent: 'center', alignItems: 'center'\n                                    }}>\n                                    </View>\n                                ) : option == currentOptionSelected ? (\n                                    <View style={{\n                                        width: 30, height: 30, borderRadius: 30 / 2,\n                                        backgroundColor: COLORS.error,\n                                        justifyContent: 'center', alignItems: 'center'\n                                    }}>\n                                    </View>\n                                ) : null\n                            }\n\n                        </TouchableOpacity>\n                    ))\n                }\n            </View>\n        )\n    }\n    const renderNextButton = () => {\n        if (showNextButton) {\n            return (\n                <TouchableOpacity\n                    onPress={handleNext}\n                    style={{\n                        marginTop: 20, width: '100%', backgroundColor: COLORS.accent, padding: 20, borderRadius: 5\n                    }}>\n                    <Text style={{ fontSize: 20, color: COLORS.white, textAlign: 'center' }}>Next</Text>\n                </TouchableOpacity>\n            )\n        } else {\n            return null\n        }\n    }\n\n\n    const [progress, setProgress] = US(new Animated.Value(0));\n    const progressAnim = progress.interpolate({\n        inputRange: [0, allQuestions.length],\n        outputRange: ['0%', '100%']\n    })\n    const renderProgressBar = () => {\n        return (\n            <View style={{\n                width: '100%',\n                height: 20,\n                borderRadius: 20,\n                backgroundColor: '#00000020',\n\n            }}>\n                <Animated.View style={[{\n                    height: 20,\n                    borderRadius: 20,\n                    backgroundColor: COLORS.accent\n                }, {\n                    width: progressAnim\n                }]}>\n\n                </Animated.View>\n\n            </View>\n        )\n    }\n\n\n    return (\n        <ScrollView>\n\n            <SafeAreaView style={{\n                flex: 1\n            }}>\n                <StatusBar barStyle=\"light-content\" backgroundColor={COLORS.primary} />\n                <View style={{\n                    flex: 1,\n                    paddingVertical: 40,\n                    paddingHorizontal: 16,\n                    backgroundColor: COLORS.background,\n                    position: 'relative'\n                }}>\n\n                    {/* ProgressBar */}\n                    {renderProgressBar()}\n\n                    {/* render User Name */}\n                    {renderInputUserName()}\n\n                    {/* Question */}\n                    {renderQuestion()}\n\n                    {/* Options */}\n                    {renderOptions()}\n\n                    {/* Next Button */}\n                    {renderNextButton()}\n\n                    {/* Score Modal */}\n                    <Modal\n                        animationType=\"slide\"\n                        transparent={true}\n                        visible={showScoreModal}\n                    >\n                        <View style={{\n                            flex: 1,\n                            backgroundColor: COLORS.primary,\n                            alignItems: 'center',\n                            justifyContent: 'center'\n                        }}>\n                            <View style={{\n                                backgroundColor: COLORS.white,\n                                width: '90%',\n                                borderRadius: 20,\n                                padding: 20,\n                                alignItems: 'center'\n                            }}>\n                                <Text style={{ fontSize: 25, fontWeight: 'bold' }}>{score > (allQuestions.length - 1) ? 'You do not have any severe symptoms' : 'You seem not healthy, please check in hospital'}</Text>\n\n                                <View style={{\n                                    flexDirection: 'row',\n                                    justifyContent: 'flex-start',\n                                    alignItems: 'center',\n                                    marginVertical: 20\n                                }}>\n                                    <Text style={{\n                                        fontSize: 20,\n                                        color: score > (allQuestions.length / 2) ? COLORS.success : COLORS.error\n                                    }}>This information has been recorded in your history</Text>\n                                    {/* <Text style={{\n                                    fontSize: 20, color: COLORS.black\n                                }}>/ { allQuestions.length }</Text> */}\n                                </View>\n                                {/* Retry Quiz button */}\n                                <TouchableOpacity\n                                    onPress={restartQuiz}\n                                    style={{\n                                        backgroundColor: COLORS.accent,\n                                        padding: 20, width: '100%', borderRadius: 20\n                                    }}>\n                                    <Text style={{\n                                        textAlign: 'center', color: COLORS.white, fontSize: 20\n                                    }}>Go Back!</Text>\n                                </TouchableOpacity>\n\n                            </View>\n\n                        </View>\n                    </Modal>\n\n\n\n                </View>\n\n\n            </SafeAreaView>\n            <View style={{\n                marginTop: 0,\n                flex: 1,\n                paddingVertical: 40,\n                paddingHorizontal: 16,\n                backgroundColor: COLORS.background,\n                position: 'relative'\n            }}>\n                <TouchableOpacity\n                    onPress={() => navigation.replace('Home')}\n                    style={{\n                        marginTop: 20, width: '100%', backgroundColor: COLORS.accent, padding: 20, borderRadius: 5\n                    }}>\n                    <Text style={{ fontSize: 20, color: COLORS.white, textAlign: 'center' }}>Go Back</Text>\n                </TouchableOpacity>\n            </View>\n\n        </ScrollView>\n\n    )\n}\n\nexport default SurveyScreen"]},"metadata":{},"sourceType":"module"}