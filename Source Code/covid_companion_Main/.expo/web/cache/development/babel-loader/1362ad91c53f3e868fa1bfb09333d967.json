{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/ashish/Downloads/covid kunal/screens/CheckHistroy.js\";\n\nimport React from 'react';\nimport { useEffect as UF, useState as US } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { useNavigation } from '@react-navigation/core';\nimport { auth, store } from \"../firebase\";\nimport BSSS from \"react-native-bootstrap-styles\";\nimport axios from \"axios\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar bs4 = new BSSS();\nvar api = {\n  host: \"covid-19-data.p.rapidapi.com\",\n  key: \"a901adf65bmsh6117e03f2efb58fp196bfdjsnc8a1c7c8b2ab\"\n};\nvar COLORS = {\n  primary: \"#252c4a\",\n  secondary: '#1E90FF',\n  accent: '#3498db',\n  success: '#00C851',\n  error: '#ff4444',\n  black: \"#171717\",\n  white: \"#FFFFFF\",\n  background: \"#252C4A\"\n};\nSIZES = {\n  base: 10,\n  width: width,\n  height: height\n};\n\nvar CheckHistory = function CheckHistory() {\n  var _auth$currentUser;\n\n  var s = bs4.s,\n      c = bs4.c;\n  var navigation = useNavigation();\n\n  var _US = US(null),\n      _US2 = _slicedToArray(_US, 2),\n      snap = _US2[0],\n      setSnap = _US2[1];\n\n  var _US3 = US(null),\n      _US4 = _slicedToArray(_US3, 2),\n      alert = _US4[0],\n      setAlert = _US4[1];\n\n  var getData = function getData() {\n    store.collection(\"history\").get({}).then(function (snapShot) {\n      setSnap(snapShot);\n    }).catch(function (err) {\n      return setAlert(err.toString());\n    });\n  };\n\n  UF(function () {\n    getData();\n  }, []);\n\n  var renderNextButton = function renderNextButton() {\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, alert && React.createElement(View, {\n      style: {\n        marginTop: 10,\n        width: '100%',\n        backgroundColor: COLORS.white,\n        padding: 10,\n        borderRadius: 5\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 17,\n        color: COLORS.error,\n        textAlign: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    }, alert)), snap && React.createElement(View, {\n      style: {\n        marginTop: 5,\n        fontSize: 20,\n        textAlign: 'center',\n        alignContent: \"center\",\n        alignItems: \"center\",\n        width: \"100%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, snap && snap.docs.map(function (doc, key) {\n      return React.createElement(View, {\n        key: key,\n        style: {\n          width: \"100%\",\n          backgroundColor: COLORS.white,\n          borderRadius: 10,\n          marginVertical: 5\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 33\n        }\n      }, React.createElement(View, {\n        style: [s.cardBody],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 37\n        }\n      }, React.createElement(Text, {\n        style: [s.text, s.h5, s.cardTitle],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 41\n        }\n      }, \"For \", doc.data().user), React.createElement(Text, {\n        style: [s.text, s.h5, s.cardSubtitle, s.p1],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 41\n        }\n      }, \"Symptomatic: \", \"\" + doc.data().symptomatic), React.createElement(Text, {\n        style: [s.text, s.h5, s.cardSubtitle, s.p1],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 41\n        }\n      }, \"Last Updated: \", doc.data().last_updated), React.createElement(Text, {\n        style: [s.text, s.h5, s.cardSubtitle, s.p1],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 41\n        }\n      }, \"Symptoms recorded:\"), React.createElement(Text, {\n        style: [s.text, s.h6, s.cardText, s.pX2],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 41\n        }\n      }, doc.data().symptoms.map(function (sym, idx) {\n        return React.createElement(Text, {\n          key: idx,\n          style: {\n            paddingHorizontal: 1\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 60\n          }\n        }, sym, \" \");\n      }))));\n    })), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.replace('Home');\n      },\n      style: {\n        marginTop: 20,\n        width: '100%',\n        backgroundColor: COLORS.accent,\n        padding: 20,\n        borderRadius: 5\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 20,\n        color: COLORS.white,\n        textAlign: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }, \"Go Back\")));\n  };\n\n  return React.createElement(ScrollView, {\n    style: {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, React.createElement(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, React.createElement(StatusBar, {\n    barStyle: \"light-content\",\n    backgroundColor: COLORS.primary,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: {\n      flex: 1,\n      paddingVertical: 40,\n      paddingHorizontal: 16,\n      backgroundColor: COLORS.background,\n      position: 'relative'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      marginBottom: 5,\n      fontSize: 25,\n      color: COLORS.white,\n      textAlign: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, \"Currently logged in as: \", (_auth$currentUser = auth.currentUser) == null ? void 0 : _auth$currentUser.email), renderNextButton())));\n};\n\nexport default CheckHistory;","map":{"version":3,"sources":["/Users/ashish/Downloads/covid kunal/screens/CheckHistroy.js"],"names":["React","useEffect","UF","useState","US","useNavigation","auth","store","BSSS","axios","Dimensions","get","width","height","bs4","api","host","key","COLORS","primary","secondary","accent","success","error","black","white","background","SIZES","base","CheckHistory","s","c","navigation","snap","setSnap","alert","setAlert","getData","collection","then","snapShot","catch","err","toString","renderNextButton","marginTop","backgroundColor","padding","borderRadius","fontSize","color","textAlign","alignContent","alignItems","docs","map","doc","marginVertical","cardBody","text","h5","cardTitle","data","user","cardSubtitle","p1","symptomatic","last_updated","h6","cardText","pX2","symptoms","sym","idx","paddingHorizontal","replace","flex","paddingVertical","position","marginBottom","currentUser","email"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useEffect as UF, useState as US } from 'react'\nimport { ScrollView, View, Text, SafeAreaView, StatusBar, TouchableOpacity } from 'react-native'\nimport { Dimensions } from \"react-native\"\nimport { useNavigation } from '@react-navigation/core'\nimport { auth, store } from '../firebase'\nimport BSSS from \"react-native-bootstrap-styles\"\nimport axios from \"axios\";\nconst { width, height } = Dimensions.get('window');\n\nconst bs4 = new BSSS()\n\nconst api = {\n    host: \"covid-19-data.p.rapidapi.com\",\n    key: \"a901adf65bmsh6117e03f2efb58fp196bfdjsnc8a1c7c8b2ab\"\n}\n\nconst COLORS = {\n    primary: \"#252c4a\",\n    secondary: '#1E90FF',\n    accent: '#3498db',\n\n    success: '#00C851',\n    error: '#ff4444',\n\n    black: \"#171717\",\n    white: \"#FFFFFF\",\n    background: \"#252C4A\"\n}\n\nSIZES = {\n    base: 10,\n    width,\n    height\n}\n\nconst CheckHistory = () => {\n\n    const { s, c } = bs4\n    const navigation = useNavigation()\n    const [snap, setSnap] = US(null)\n    const [alert, setAlert] = US(null)\n\n    const getData = () => {\n        store.collection(\"history\").get({}).then(snapShot => {\n            setSnap(snapShot)\n        })\n            .catch(err => setAlert(err.toString()))\n    }\n\n    UF(() => {\n        getData()\n    }, [])\n\n    const renderNextButton = () => {\n\n        return (\n            <View>\n                {/* alert */}\n                {\n                    alert &&\n                    <View style={{ marginTop: 10, width: '100%', backgroundColor: COLORS.white, padding: 10, borderRadius: 5 }}>\n                        <Text style={{ fontSize: 17, color: COLORS.error, textAlign: 'center' }}>{alert}</Text>\n                    </View>\n                }\n\n                {/* display firestore data */}\n                {\n                    snap &&\n                    <View style={{ marginTop: 5, fontSize: 20, textAlign: 'center', alignContent: \"center\", alignItems: \"center\", width: \"100%\" }}>\n                        {\n                            snap &&\n                            snap.docs.map((doc, key) => (\n                                <View key={key} style={{ width: \"100%\", backgroundColor: COLORS.white, borderRadius: 10, marginVertical: 5 }}>\n                                    <View style={[s.cardBody]}>\n                                        <Text style={[s.text, s.h5, s.cardTitle]}>For {doc.data().user}</Text>\n                                        <Text style={[s.text, s.h5, s.cardSubtitle, s.p1]}>Symptomatic: {`${doc.data().symptomatic}`}</Text>\n                                        <Text style={[s.text, s.h5, s.cardSubtitle, s.p1]}>Last Updated: {doc.data().last_updated}</Text>\n                                        <Text style={[s.text, s.h5, s.cardSubtitle, s.p1]}>Symptoms recorded:</Text>\n                                        <Text style={[s.text, s.h6, s.cardText, s.pX2,]}>\n                                            {\n                                                doc.data().symptoms.map((sym, idx) => {\n                                                    return <Text key={idx} style={{ paddingHorizontal: 1 }}>{sym} { }</Text>\n                                                })\n                                            }\n                                        </Text>\n                                    </View>\n                                </View>\n                            ))\n\n                        }\n                    </View>\n                }\n                <TouchableOpacity\n                    onPress={() => navigation.replace('Home')}\n                    style={{ marginTop: 20, width: '100%', backgroundColor: COLORS.accent, padding: 20, borderRadius: 5 }}>\n                    <Text style={{ fontSize: 20, color: COLORS.white, textAlign: 'center' }}>Go Back</Text>\n                </TouchableOpacity>\n            </View>\n        )\n    }\n\n    return (\n        <ScrollView style={{}}>\n            <SafeAreaView style={{\n                flex: 1,\n            }}>\n                <StatusBar barStyle=\"light-content\" backgroundColor={COLORS.primary} />\n                <View style={{\n                    flex: 1,\n                    paddingVertical: 40,\n                    paddingHorizontal: 16,\n                    backgroundColor: COLORS.background,\n                    position: 'relative'\n                }}>\n                    <Text style={{ marginBottom: 5, fontSize: 25, color: COLORS.white, textAlign: 'center' }}>\n                        Currently logged in as: {auth.currentUser?.email}\n                    </Text>\n                    {renderNextButton()}\n                </View>\n            </SafeAreaView>\n        </ScrollView>\n\n    )\n}\n\nexport default CheckHistory"]},"metadata":{},"sourceType":"module"}