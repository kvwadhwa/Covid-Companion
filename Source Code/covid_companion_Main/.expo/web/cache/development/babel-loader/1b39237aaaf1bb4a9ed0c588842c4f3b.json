{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport { mixinButtonSize, mixinButtonSizeText, mixinButtonVariant, mixinButtonVariantText } from \"./mixins/buttons\";\nimport { mixinButtonVariantActive, mixinButtonOutlineVariant, mixinButtonOutlineVariantText } from \"./mixins/buttons\";\nimport { mixinBoxShadow } from \"./mixins/box-shadow\";\nimport { selectorNotFirstChild } from \"./mixins/selectors\";\nexport default function getClasses(constants, classes) {\n  var WHITE = constants.WHITE,\n      BODY_COLOR = constants.BODY_COLOR,\n      THEME_COLORS = constants.THEME_COLORS,\n      FONT_WEIGHT_NORMAL = constants.FONT_WEIGHT_NORMAL,\n      LINK_COLOR = constants.LINK_COLOR,\n      LINK_DECORATION_LINE = constants.LINK_DECORATION_LINE,\n      LINK_DECORATION_COLOR = constants.LINK_DECORATION_COLOR,\n      LINK_DECORATION_STYLE = constants.LINK_DECORATION_STYLE,\n      LINK_HOVER_COLOR = constants.LINK_HOVER_COLOR,\n      LINK_HOVER_DECORATION_LINE = constants.LINK_HOVER_DECORATION_LINE,\n      LINK_HOVER_DECORATION_COLOR = constants.LINK_HOVER_DECORATION_COLOR,\n      LINK_HOVER_DECORATION_STYLE = constants.LINK_HOVER_DECORATION_STYLE,\n      BTN_PADDING_Y = constants.BTN_PADDING_Y,\n      BTN_PADDING_X = constants.BTN_PADDING_X,\n      BTN_LINE_HEIGHT = constants.BTN_LINE_HEIGHT,\n      BTN_BORDER_WIDTH = constants.BTN_BORDER_WIDTH,\n      BTN_FONT_FAMILY = constants.BTN_FONT_FAMILY,\n      BTN_FONT_SIZE = constants.BTN_FONT_SIZE,\n      BTN_FONT_WEIGHT = constants.BTN_FONT_WEIGHT,\n      BTN_ACTIVE_OPACITY = constants.BTN_ACTIVE_OPACITY,\n      BTN_DISABLED_OPACITY = constants.BTN_DISABLED_OPACITY,\n      BTN_LINK_DISABLED_COLOR = constants.BTN_LINK_DISABLED_COLOR,\n      BTN_OUTLINE_BACKGROUND_COLOR = constants.BTN_OUTLINE_BACKGROUND_COLOR,\n      BTN_BORDER_RADIUS = constants.BTN_BORDER_RADIUS,\n      BTN_BORDER_RADIUS_LG = constants.BTN_BORDER_RADIUS_LG,\n      BTN_BORDER_RADIUS_SM = constants.BTN_BORDER_RADIUS_SM,\n      BTN_PADDING_Y_SM = constants.BTN_PADDING_Y_SM,\n      BTN_PADDING_X_SM = constants.BTN_PADDING_X_SM,\n      BTN_FONT_SIZE_SM = constants.BTN_FONT_SIZE_SM,\n      BTN_LINE_HEIGHT_SM = constants.BTN_LINE_HEIGHT_SM,\n      BTN_PADDING_Y_LG = constants.BTN_PADDING_Y_LG,\n      BTN_PADDING_X_LG = constants.BTN_PADDING_X_LG,\n      BTN_FONT_SIZE_LG = constants.BTN_FONT_SIZE_LG,\n      BTN_LINE_HEIGHT_LG = constants.BTN_LINE_HEIGHT_LG,\n      BTN_BLOCK_SPACING_Y = constants.BTN_BLOCK_SPACING_Y;\n  var _classes = {\n    btn: _extends({\n      backgroundColor: 'transparent',\n      borderWidth: BTN_BORDER_WIDTH,\n      borderStyle: 'solid',\n      borderColor: 'transparent',\n      overflow: 'hidden',\n      justifyContent: 'center'\n    }, mixinButtonSize(constants, BTN_PADDING_Y, BTN_PADDING_X, BTN_LINE_HEIGHT, BTN_BORDER_RADIUS), LINK_DECORATION_LINE == 'none' ? {\n      textDecorationLine: 'none'\n    } : {}),\n    btnDisabled: _extends({\n      opacity: BTN_DISABLED_OPACITY\n    }),\n    btnHover: {\n      color: BODY_COLOR,\n      textDecorationLine: 'none'\n    },\n    btnFocus: _extends({}),\n    btnActive: _extends({}),\n    btnTouchable: {\n      borderRadius: BTN_BORDER_RADIUS,\n      overflow: 'hidden'\n    },\n    btnTouchableBlock: {},\n    btnText: _extends({}, classes.text, {\n      fontFamily: BTN_FONT_FAMILY,\n      fontWeight: BTN_FONT_WEIGHT,\n      color: BODY_COLOR,\n      textAlign: 'center'\n    }, mixinButtonSizeText(constants, BTN_FONT_SIZE, BTN_LINE_HEIGHT)),\n    btnLink: {},\n    btnLinkText: {\n      fontWeight: FONT_WEIGHT_NORMAL,\n      color: LINK_COLOR,\n      textDecorationLine: LINK_DECORATION_LINE,\n      textDecorationColor: LINK_DECORATION_COLOR,\n      textDecorationStyle: LINK_DECORATION_STYLE\n    },\n    btnLinkHoverText: {\n      color: LINK_HOVER_COLOR,\n      textDecorationLine: LINK_HOVER_DECORATION_LINE,\n      textDecorationColor: LINK_HOVER_DECORATION_COLOR,\n      textDecorationStyle: LINK_HOVER_DECORATION_STYLE\n    },\n    btnLinkFocusText: {\n      textDecorationLine: LINK_HOVER_DECORATION_LINE,\n      textDecorationColor: LINK_HOVER_DECORATION_COLOR,\n      textDecorationStyle: LINK_HOVER_DECORATION_STYLE\n    },\n    btnLinkDisabledText: {\n      color: BTN_LINK_DISABLED_COLOR\n    },\n    btnLg: mixinButtonSize(constants, BTN_PADDING_Y_LG, BTN_PADDING_X_LG, BTN_BORDER_RADIUS_LG),\n    btnLgText: mixinButtonSizeText(constants, BTN_FONT_SIZE_LG, BTN_LINE_HEIGHT_LG),\n    btnSm: mixinButtonSize(constants, BTN_PADDING_Y_SM, BTN_PADDING_X_SM, BTN_BORDER_RADIUS_SM),\n    btnSmText: mixinButtonSizeText(constants, BTN_FONT_SIZE_SM, BTN_LINE_HEIGHT_SM),\n    btnBlock: {\n      width: '100%'\n    },\n    btnBlockNextChild: function btnBlockNextChild(nOrBool) {\n      return selectorNotFirstChild(nOrBool, {\n        marginTop: BTN_BLOCK_SPACING_Y\n      });\n    }\n  };\n  Object.keys(THEME_COLORS).forEach(function (item) {\n    var classColor = item.charAt(0).toUpperCase() + item.slice(1).toLowerCase();\n    classes['btn' + classColor] = _extends(mixinButtonVariant(constants, THEME_COLORS[item], THEME_COLORS[item]));\n    classes['btn' + classColor + 'Text'] = mixinButtonVariantText(constants, THEME_COLORS[item]);\n    classes['btn' + classColor + 'Active'] = mixinButtonVariantActive(constants, THEME_COLORS[item], THEME_COLORS[item]);\n  });\n  Object.keys(THEME_COLORS).forEach(function (item) {\n    var classColor = item.charAt(0).toUpperCase() + item.slice(1).toLowerCase();\n    classes['btnOutline' + classColor] = mixinButtonOutlineVariant(constants, THEME_COLORS[item], BTN_OUTLINE_BACKGROUND_COLOR);\n    classes['btnOutline' + classColor + 'Text'] = mixinButtonOutlineVariantText(constants, THEME_COLORS[item]);\n  });\n  return _classes;\n}\n;","map":{"version":3,"sources":["/Users/ashish/Downloads/covid kunal/node_modules/react-native-bootstrap-styles/src/buttons.js"],"names":["mixinButtonSize","mixinButtonSizeText","mixinButtonVariant","mixinButtonVariantText","mixinButtonVariantActive","mixinButtonOutlineVariant","mixinButtonOutlineVariantText","mixinBoxShadow","selectorNotFirstChild","getClasses","constants","classes","WHITE","BODY_COLOR","THEME_COLORS","FONT_WEIGHT_NORMAL","LINK_COLOR","LINK_DECORATION_LINE","LINK_DECORATION_COLOR","LINK_DECORATION_STYLE","LINK_HOVER_COLOR","LINK_HOVER_DECORATION_LINE","LINK_HOVER_DECORATION_COLOR","LINK_HOVER_DECORATION_STYLE","BTN_PADDING_Y","BTN_PADDING_X","BTN_LINE_HEIGHT","BTN_BORDER_WIDTH","BTN_FONT_FAMILY","BTN_FONT_SIZE","BTN_FONT_WEIGHT","BTN_ACTIVE_OPACITY","BTN_DISABLED_OPACITY","BTN_LINK_DISABLED_COLOR","BTN_OUTLINE_BACKGROUND_COLOR","BTN_BORDER_RADIUS","BTN_BORDER_RADIUS_LG","BTN_BORDER_RADIUS_SM","BTN_PADDING_Y_SM","BTN_PADDING_X_SM","BTN_FONT_SIZE_SM","BTN_LINE_HEIGHT_SM","BTN_PADDING_Y_LG","BTN_PADDING_X_LG","BTN_FONT_SIZE_LG","BTN_LINE_HEIGHT_LG","BTN_BLOCK_SPACING_Y","_classes","btn","backgroundColor","borderWidth","borderStyle","borderColor","overflow","justifyContent","textDecorationLine","btnDisabled","opacity","btnHover","color","btnFocus","btnActive","btnTouchable","borderRadius","btnTouchableBlock","btnText","text","fontFamily","fontWeight","textAlign","btnLink","btnLinkText","textDecorationColor","textDecorationStyle","btnLinkHoverText","btnLinkFocusText","btnLinkDisabledText","btnLg","btnLgText","btnSm","btnSmText","btnBlock","width","btnBlockNextChild","nOrBool","marginTop","Object","keys","forEach","item","classColor","charAt","toUpperCase","slice","toLowerCase"],"mappings":"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","sourcesContent":["import { mixinButtonSize, mixinButtonSizeText, mixinButtonVariant, mixinButtonVariantText } from './mixins/buttons';\nimport { mixinButtonVariantActive, mixinButtonOutlineVariant, mixinButtonOutlineVariantText } from './mixins/buttons';\nimport { mixinBoxShadow } from './mixins/box-shadow';\nimport { selectorNotFirstChild } from './mixins/selectors';\n\nexport default function getClasses(constants, classes) {\n  const {\n    WHITE,\n    BODY_COLOR,\n    THEME_COLORS,\n    FONT_WEIGHT_NORMAL,\n    LINK_COLOR,\n    LINK_DECORATION_LINE,\n    LINK_DECORATION_COLOR,\n    LINK_DECORATION_STYLE,\n    LINK_HOVER_COLOR,\n    LINK_HOVER_DECORATION_LINE,\n    LINK_HOVER_DECORATION_COLOR,\n    LINK_HOVER_DECORATION_STYLE,\n    BTN_PADDING_Y,\n    BTN_PADDING_X,\n    BTN_LINE_HEIGHT,\n    BTN_BORDER_WIDTH,\n    BTN_FONT_FAMILY,\n    BTN_FONT_SIZE,\n    BTN_FONT_WEIGHT,\n    BTN_ACTIVE_OPACITY,\n    BTN_DISABLED_OPACITY,\n    BTN_LINK_DISABLED_COLOR,\n    BTN_OUTLINE_BACKGROUND_COLOR,\n    BTN_BORDER_RADIUS, BTN_BORDER_RADIUS_LG, BTN_BORDER_RADIUS_SM,\n    BTN_PADDING_Y_SM, BTN_PADDING_X_SM, BTN_FONT_SIZE_SM, BTN_LINE_HEIGHT_SM,\n    BTN_PADDING_Y_LG, BTN_PADDING_X_LG, BTN_FONT_SIZE_LG,BTN_LINE_HEIGHT_LG,\n    BTN_BLOCK_SPACING_Y,\n  } = constants;\n\n  const _classes = {\n    btn: Object.assign({\n      // obsoleted / alignSelf: 'flex-start', // mimic: display: inline-block;\n      // see btnText / fontFamily: $btn-font-family;\n      // see btnText / fontWeight: $btn-font-weight;\n      // see btnText / color: $body-color;\n      // see btnText / text-align: center;\n      // use \"numberOfLines={1}\" / whiteSpace: 'nowrap',\n      backgroundColor: 'transparent',\n      borderWidth: BTN_BORDER_WIDTH,\n      borderStyle: 'solid',\n      borderColor: 'transparent',\n      overflow: 'hidden', // exprimental / important for rounded borders\n      justifyContent: 'center', // verticalAlign: 'middle',\n      // reserved / @include transition($btn-transition);\n    },\n      mixinButtonSize(\n        constants,\n        BTN_PADDING_Y, BTN_PADDING_X,\n        BTN_LINE_HEIGHT, BTN_BORDER_RADIUS,\n      ),\n      LINK_DECORATION_LINE == 'none' ? {textDecorationLine: 'none'} : {}, // yep\n    ),\n\n    btnDisabled: Object.assign({\n      opacity: BTN_DISABLED_OPACITY,\n    },\n      // reserved / mixinBoxShadow('none'),\n    ),\n\n    btnHover: {\n      color: BODY_COLOR,\n      textDecorationLine: 'none',\n    },\n\n    btnFocus: Object.assign({\n      // ignored / outline: 0,\n    },\n      // reserved / mixinBoxShadow($btn-focus-box-shadow),\n    ),\n\n    btnActive: Object.assign({\n      // pass\n    },\n      // reserved / mixinBoxShadow($btn-active-box-shadow),\n    ),\n\n    btnTouchable: {\n      // obsoleted / alignSelf: 'flex-start',\n      borderRadius: BTN_BORDER_RADIUS,\n      overflow: 'hidden', // experimental\n    },\n\n    btnTouchableBlock: {\n      // obsoleted / alignSelf: 'auto',\n    },\n\n    btnText: Object.assign({}, classes.text, {\n      fontFamily: BTN_FONT_FAMILY,\n      fontWeight: BTN_FONT_WEIGHT,\n      color: BODY_COLOR,\n      textAlign: 'center',\n    },\n      mixinButtonSizeText(constants, BTN_FONT_SIZE, BTN_LINE_HEIGHT),\n    ),\n\n    btnLink: {\n      // see btnLinkText / font-weight: $font-weight-normal;\n      // see btnLinkText / color: $link-color;\n      // see btnLinkText / text-decoration: $link-decoration;\n\n      // see btnLinkHoverText\n      // @include hover() {\n      //   color: $link-hover-color;\n      //   text-decoration: $link-hover-decoration;\n      // }\n\n      // see btnLinkFocusText\n      // &:focus,\n      // &.focus {\n      //   text-decoration: $link-hover-decoration;\n      // }\n    },\n\n    btnLinkText: {\n      fontWeight: FONT_WEIGHT_NORMAL,\n      color: LINK_COLOR,\n      textDecorationLine: LINK_DECORATION_LINE,\n      textDecorationColor: LINK_DECORATION_COLOR,\n      textDecorationStyle: LINK_DECORATION_STYLE,\n    },\n\n    btnLinkHoverText: {\n      color: LINK_HOVER_COLOR,\n      textDecorationLine: LINK_HOVER_DECORATION_LINE,\n      textDecorationColor: LINK_HOVER_DECORATION_COLOR,\n      textDecorationStyle: LINK_HOVER_DECORATION_STYLE,\n    },\n\n    btnLinkFocusText: {\n      textDecorationLine: LINK_HOVER_DECORATION_LINE, // yep, hover\n      textDecorationColor: LINK_HOVER_DECORATION_COLOR,\n      textDecorationStyle: LINK_HOVER_DECORATION_STYLE,\n    },\n\n    btnLinkDisabledText: {\n      color: BTN_LINK_DISABLED_COLOR,\n      // pointer-events: none,\n    },\n\n    btnLg: mixinButtonSize(\n      constants,\n      BTN_PADDING_Y_LG, BTN_PADDING_X_LG, BTN_BORDER_RADIUS_LG,\n    ),\n\n    btnLgText: mixinButtonSizeText(\n      constants,\n      BTN_FONT_SIZE_LG, BTN_LINE_HEIGHT_LG,\n    ),\n\n    btnSm: mixinButtonSize(\n      constants,\n      BTN_PADDING_Y_SM, BTN_PADDING_X_SM, BTN_BORDER_RADIUS_SM,\n    ),\n\n    btnSmText: mixinButtonSizeText(\n      constants,\n      BTN_FONT_SIZE_SM, BTN_LINE_HEIGHT_SM\n    ),\n\n    btnBlock: {\n      // obsoleted / alignSelf: 'auto', // reset btn:alignSelf\n      width: '100%',\n    },\n\n    // experimental\n    btnBlockNextChild: nOrBool => selectorNotFirstChild(nOrBool, {\n      marginTop: BTN_BLOCK_SPACING_Y,\n    }),\n  };\n\n  // btn%color / ex: btnPrimary\n  // btn%colorText / ex: btnPrimaryText\n  Object.keys(THEME_COLORS).forEach((item) => {\n    const classColor = item.charAt(0).toUpperCase() + item.slice(1).toLowerCase();\n    classes['btn' + classColor] = Object.assign(\n      mixinButtonVariant(constants, THEME_COLORS[item], THEME_COLORS[item]),\n      // reserved / no \"inset\" style / mixinBoxShadow(constants, BTN_BOX_SHADOW_COLOR, BTN_BOX_SHADOW_OFFSET, BTN_BOX_SHADOW_OPACITY, BTN_BOX_SHADOW_RADIUS),\n    );\n\n    classes['btn' + classColor + 'Text'] = mixinButtonVariantText(constants, THEME_COLORS[item]);\n    classes['btn' + classColor + 'Active'] = mixinButtonVariantActive(constants, THEME_COLORS[item], THEME_COLORS[item]);\n    // obsoleted / classes['btn' + classColor + 'Disabled'] = mixinButtonVariantDisabled(constants, THEME_COLORS[item], THEME_COLORS[item]);\n    // obsoleted / classes['btn' + classColor + 'DisabledText'] = mixinButtonVariantDisabledText(constants, THEME_COLORS[item]);\n  });\n\n  // btnOutline%color / ex: btnOutlinePrimary\n  // btnOutline%colorText / ex: btnOutlinePrimaryText\n  Object.keys(THEME_COLORS).forEach((item) => {\n    const classColor = item.charAt(0).toUpperCase() + item.slice(1).toLowerCase();\n    classes['btnOutline' + classColor] = mixinButtonOutlineVariant(constants, THEME_COLORS[item], BTN_OUTLINE_BACKGROUND_COLOR);\n    classes['btnOutline' + classColor + 'Text'] = mixinButtonOutlineVariantText(constants, THEME_COLORS[item]);\n    // obsoleted / classes['btnOutline' + classColor + 'Disabled'] = mixinButtonOutlineVariantDisabled(constants);\n    // obsoleted / classes['btnOutline' + classColor + 'DisabledText'] = mixinButtonOutlineVariantDisabledText(constants, THEME_COLORS[item]);\n  });\n\n  return _classes;\n};\n"]},"metadata":{},"sourceType":"module"}