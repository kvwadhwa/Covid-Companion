{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport { mixinBorderLeftRadius, mixinBorderRightRadius } from \"./mixins/border-radius\";\nimport { mixinBorderTopRadius, mixinBorderBottomRadius } from \"./mixins/border-radius\";\nimport { selectorNotFirstChild, selectorNotLastChild } from \"./mixins/selectors\";\nexport default function getClasses(constants, classes) {\n  var BTN_BORDER_WIDTH = constants.BTN_BORDER_WIDTH;\n  var _classes = {\n    btnGroup: {\n      position: 'relative'\n    },\n    btnGroupVertical: {\n      position: 'relative',\n      flexDirection: 'column'\n    },\n    btnToolbar: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'flex-start'\n    },\n    btnGroupBtn: function btnGroupBtn(n, length) {\n      return _extends({}, selectorNotFirstChild(n, length, {\n        marginLeft: -BTN_BORDER_WIDTH\n      }), selectorNotFirstChild(n, mixinBorderLeftRadius(constants, 0)), selectorNotLastChild(n, length, mixinBorderRightRadius(constants, 0)));\n    },\n    btnGroupVerticalBtn: function btnGroupVerticalBtn(n, length) {\n      return _extends({}, selectorNotFirstChild(n, length, {\n        marginTop: -BTN_BORDER_WIDTH\n      }), selectorNotFirstChild(n, mixinBorderTopRadius(constants, 0)), selectorNotLastChild(n, length, mixinBorderBottomRadius(constants, 0)));\n    }\n  };\n  return _classes;\n}\n;","map":{"version":3,"sources":["/Users/ashish/Downloads/covid kunal/node_modules/react-native-bootstrap-styles/src/button-group.js"],"names":["mixinBorderLeftRadius","mixinBorderRightRadius","mixinBorderTopRadius","mixinBorderBottomRadius","selectorNotFirstChild","selectorNotLastChild","getClasses","constants","classes","BTN_BORDER_WIDTH","_classes","btnGroup","position","btnGroupVertical","flexDirection","btnToolbar","display","flexWrap","justifyContent","btnGroupBtn","n","length","marginLeft","btnGroupVerticalBtn","marginTop"],"mappings":";AAAA,SAASA,qBAAT,EAAgCC,sBAAhC;AACA,SAASC,oBAAT,EAA+BC,uBAA/B;AACA,SAASC,qBAAT,EAAgCC,oBAAhC;AAEA,eAAe,SAASC,UAAT,CAAoBC,SAApB,EAA+BC,OAA/B,EAAwC;AACrD,MACEC,gBADF,GAEIF,SAFJ,CACEE,gBADF;AAIA,MAAMC,QAAQ,GAAG;AAEjBC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,QAAQ,EAAE;AADF,KAFO;AAwBjBC,IAAAA,gBAAgB,EAAE;AAChBD,MAAAA,QAAQ,EAAE,UADM;AAKhBE,MAAAA,aAAa,EAAE;AALC,KAxBD;AAqDjBC,IAAAA,UAAU,EAAE;AACVC,MAAAA,OAAO,EAAE,MADC;AAEVC,MAAAA,QAAQ,EAAE,MAFA;AAGVC,MAAAA,cAAc,EAAE;AAHN,KArDK;AAiEjBC,IAAAA,WAAW,EAAE,qBAACC,CAAD,EAAIC,MAAJ;AAAA,aAAe,SAAc,EAAd,EAC1BjB,qBAAqB,CAACgB,CAAD,EAAIC,MAAJ,EAAY;AAC/BC,QAAAA,UAAU,EAAE,CAACb;AADkB,OAAZ,CADK,EAI1BL,qBAAqB,CAACgB,CAAD,EAAIpB,qBAAqB,CAACO,SAAD,EAAY,CAAZ,CAAzB,CAJK,EAK1BF,oBAAoB,CAACe,CAAD,EAAIC,MAAJ,EAAYpB,sBAAsB,CAACM,SAAD,EAAY,CAAZ,CAAlC,CALM,CAAf;AAAA,KAjEI;AAgHjBgB,IAAAA,mBAAmB,EAAE,6BAACH,CAAD,EAAIC,MAAJ;AAAA,aAAe,SAAc,EAAd,EAClCjB,qBAAqB,CAACgB,CAAD,EAAIC,MAAJ,EAAY;AAC/BG,QAAAA,SAAS,EAAE,CAACf;AADmB,OAAZ,CADa,EAIlCL,qBAAqB,CAACgB,CAAD,EAAIlB,oBAAoB,CAACK,SAAD,EAAY,CAAZ,CAAxB,CAJa,EAKlCF,oBAAoB,CAACe,CAAD,EAAIC,MAAJ,EAAYlB,uBAAuB,CAACI,SAAD,EAAY,CAAZ,CAAnC,CALc,CAAf;AAAA;AAhHJ,GAAjB;AAqJA,SAAOG,QAAP;AACD;AAAA","sourcesContent":["import { mixinBorderLeftRadius, mixinBorderRightRadius } from './mixins/border-radius';\nimport { mixinBorderTopRadius, mixinBorderBottomRadius } from './mixins/border-radius';\nimport { selectorNotFirstChild, selectorNotLastChild } from './mixins/selectors';\n\nexport default function getClasses(constants, classes) {\n  const {\n    BTN_BORDER_WIDTH,\n  } = constants;\n\n  const _classes = {\n\n  btnGroup: {\n    position: 'relative',\n    // ignored / display: inline-flex,\n    // ignored /vertical-align: middle; // match .btn alignment given font-size hack above\n\n    // > .btn {\n    //   position: relative;\n    //   flex: 1 1 auto;\n\n    //   // Bring the hover, focused, and \"active\" buttons to the front to overlay\n    //   // the borders properly\n    //   @include hover() {\n    //     z-index: 1;\n    //   }\n    //   &:focus,\n    //   &:active,\n    //   &.active {\n    //     z-index: 1;\n    //   }\n    // }\n  },\n\n  btnGroupVertical: {\n    position: 'relative',\n    // ignored / display: inline-flex;\n    // ignored / vertical-align: middle; // match .btn alignment given font-size hack above\n\n    flexDirection: 'column',\n    // ignored / alignItems: 'flex-start',\n    // ignored / justifyContent: 'center',\n\n    //   > .btn,\n    //   > .btn-group {\n    //     width: 100%;\n    //   }\n\n    // > .btn {\n    //   position: relative;\n    //   flex: 1 1 auto;\n\n    //   @include hover() {\n    //     z-index: 1;\n    //   }\n    //   &:focus,\n    //   &:active,\n    //   &.active {\n    //     z-index: 1;\n    //   }\n    // }\n  },\n\n  btnToolbar: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'flex-start',\n  },\n\n  // .btn-toolbar {\n  //   .input-group {\n  //     width: auto;\n  //   }\n  // }\n\n  btnGroupBtn: (n, length) => Object.assign({},\n    selectorNotFirstChild(n, length, {\n      marginLeft: -BTN_BORDER_WIDTH,\n    }),\n    selectorNotFirstChild(n, mixinBorderLeftRadius(constants, 0)),\n    selectorNotLastChild(n, length, mixinBorderRightRadius(constants, 0)),\n  ),\n\n  // ignored / .btn-group-sm > .btn { @extend .btn-sm; }\n  // ignored / .btn-group-lg > .btn { @extend .btn-lg; }\n\n  // .dropdown-toggle-split {\n  //   padding-right: $btn-padding-x * .75;\n  //   padding-left: $btn-padding-x * .75;\n\n  //   &::after,\n  //   .dropup &::after,\n  //   .dropright &::after {\n  //     margin-left: 0;\n  //   }\n\n  //   .dropleft &::before {\n  //     margin-right: 0;\n  //   }\n  // }\n\n  // .btn-sm + .dropdown-toggle-split {\n  //   padding-right: $btn-padding-x-sm * .75;\n  //   padding-left: $btn-padding-x-sm * .75;\n  // }\n\n  // .btn-lg + .dropdown-toggle-split {\n  //   padding-right: $btn-padding-x-lg * .75;\n  //   padding-left: $btn-padding-x-lg * .75;\n  // }\n\n  // // The clickable button for toggling the menu\n  // // Set the same inset shadow as the :active state\n  // .btn-group.show .dropdown-toggle {\n  //   @include box-shadow($btn-active-box-shadow);\n\n  //   // Show no shadow for `.btn-link` since it has no other button styles.\n  //   &.btn-link {\n  //     @include box-shadow(none);\n  //   }\n  // }\n\n  btnGroupVerticalBtn: (n, length) => Object.assign({},\n    selectorNotFirstChild(n, length, {\n      marginTop: -BTN_BORDER_WIDTH,\n    }),\n    selectorNotFirstChild(n, mixinBorderTopRadius(constants, 0)),\n    selectorNotLastChild(n, length, mixinBorderBottomRadius(constants, 0)),\n  ),\n\n  // // Checkbox and radio options\n  // //\n  // // In order to support the browser's form validation feedback, powered by the\n  // // `required` attribute, we have to \"hide\" the inputs via `clip`. We cannot use\n  // // `display: none;` or `visibility: hidden;` as that also hides the popover.\n  // // Simply visually hiding the inputs via `opacity` would leave them clickable in\n  // // certain cases which is prevented by using `clip` and `pointer-events`.\n  // // This way, we ensure a DOM element is visible to position the popover from.\n  // //\n  // // See https://github.com/twbs/bootstrap/pull/12794 and\n  // // https://github.com/twbs/bootstrap/pull/14559 for more information.\n\n  // .btn-group-toggle {\n  //   > .btn,\n  //   > .btn-group > .btn {\n  //     margin-bottom: 0; // Override default `<label>` value\n\n  //     input[type=\"radio\"],\n  //     input[type=\"checkbox\"] {\n  //       position: absolute;\n  //       clip: rect(0, 0, 0, 0);\n  //       pointer-events: none;\n  //     }\n  //   }\n  // }\n\n\n  };\n\n  return _classes;\n};\n"]},"metadata":{},"sourceType":"module"}